// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol_player_agent_to_controller.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol_player_agent_to_controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol_player_agent_to_controller {

namespace {

const ::google::protobuf::Descriptor* MessageHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessagePlayerAgent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessagePlayerAgent_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayStart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayStart_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayPause_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayPause_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayStep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayStep_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayLoop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayLoop_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayReverse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayReverse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlaySpeed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlaySpeed_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestPlayFromPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestPlayFromPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestSetRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestSetRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageResponsePlayerDestroy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageResponsePlayerDestroy_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessagePlayerController_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessagePlayerController_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageResponsePlayStart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageResponsePlayStart_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageResponsePlayStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageResponsePlayStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtobufPlayerAgentToController_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtobufPlayerAgentToController_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EPlayerAgentCommandType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EPlayerControllerCommandType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EWho_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() {
  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol_player_agent_to_controller.proto");
  GOOGLE_CHECK(file != NULL);
  MessageHeader_descriptor_ = file->message_type(0);
  static const int MessageHeader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeader, module_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeader, last_error_),
  };
  MessageHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageHeader_descriptor_,
      MessageHeader::default_instance_,
      MessageHeader_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeader, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeader, _is_default_instance_));
  MessagePlayerAgent_descriptor_ = file->message_type(1);
  static const int MessagePlayerAgent_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, cmd_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_pause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_loop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_reverse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_play_from_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_set_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, msg_player_destroy_),
  };
  MessagePlayerAgent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessagePlayerAgent_descriptor_,
      MessagePlayerAgent::default_instance_,
      MessagePlayerAgent_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessagePlayerAgent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerAgent, _is_default_instance_));
  MessageRequestPlayStart_descriptor_ = file->message_type(2);
  static const int MessageRequestPlayStart_offsets_[1] = {
  };
  MessageRequestPlayStart_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayStart_descriptor_,
      MessageRequestPlayStart::default_instance_,
      MessageRequestPlayStart_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayStart),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStart, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStart, _is_default_instance_));
  MessageRequestPlayPause_descriptor_ = file->message_type(3);
  static const int MessageRequestPlayPause_offsets_[1] = {
  };
  MessageRequestPlayPause_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayPause_descriptor_,
      MessageRequestPlayPause::default_instance_,
      MessageRequestPlayPause_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayPause),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayPause, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayPause, _is_default_instance_));
  MessageRequestPlayStop_descriptor_ = file->message_type(4);
  static const int MessageRequestPlayStop_offsets_[1] = {
  };
  MessageRequestPlayStop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayStop_descriptor_,
      MessageRequestPlayStop::default_instance_,
      MessageRequestPlayStop_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayStop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStop, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStop, _is_default_instance_));
  MessageRequestPlayStep_descriptor_ = file->message_type(5);
  static const int MessageRequestPlayStep_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStep, forward_),
  };
  MessageRequestPlayStep_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayStep_descriptor_,
      MessageRequestPlayStep::default_instance_,
      MessageRequestPlayStep_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayStep),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStep, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayStep, _is_default_instance_));
  MessageRequestPlayLoop_descriptor_ = file->message_type(6);
  static const int MessageRequestPlayLoop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayLoop, loop_),
  };
  MessageRequestPlayLoop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayLoop_descriptor_,
      MessageRequestPlayLoop::default_instance_,
      MessageRequestPlayLoop_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayLoop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayLoop, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayLoop, _is_default_instance_));
  MessageRequestPlayReverse_descriptor_ = file->message_type(7);
  static const int MessageRequestPlayReverse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayReverse, reverse_),
  };
  MessageRequestPlayReverse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayReverse_descriptor_,
      MessageRequestPlayReverse::default_instance_,
      MessageRequestPlayReverse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayReverse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayReverse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayReverse, _is_default_instance_));
  MessageRequestPlaySpeed_descriptor_ = file->message_type(8);
  static const int MessageRequestPlaySpeed_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlaySpeed, normalize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlaySpeed, increase_),
  };
  MessageRequestPlaySpeed_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlaySpeed_descriptor_,
      MessageRequestPlaySpeed::default_instance_,
      MessageRequestPlaySpeed_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlaySpeed),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlaySpeed, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlaySpeed, _is_default_instance_));
  MessageRequestPlayFromPos_descriptor_ = file->message_type(9);
  static const int MessageRequestPlayFromPos_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayFromPos, positionmillisec_),
  };
  MessageRequestPlayFromPos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestPlayFromPos_descriptor_,
      MessageRequestPlayFromPos::default_instance_,
      MessageRequestPlayFromPos_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestPlayFromPos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayFromPos, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestPlayFromPos, _is_default_instance_));
  MessageRequestSetRange_descriptor_ = file->message_type(10);
  static const int MessageRequestSetRange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestSetRange, leftplayingrangemillisec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestSetRange, rightplayingrangemillisec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestSetRange, resetrange_),
  };
  MessageRequestSetRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestSetRange_descriptor_,
      MessageRequestSetRange::default_instance_,
      MessageRequestSetRange_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestSetRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestSetRange, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestSetRange, _is_default_instance_));
  MessageResponsePlayerDestroy_descriptor_ = file->message_type(11);
  static const int MessageResponsePlayerDestroy_offsets_[1] = {
  };
  MessageResponsePlayerDestroy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageResponsePlayerDestroy_descriptor_,
      MessageResponsePlayerDestroy::default_instance_,
      MessageResponsePlayerDestroy_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageResponsePlayerDestroy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayerDestroy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayerDestroy, _is_default_instance_));
  MessagePlayerController_descriptor_ = file->message_type(12);
  static const int MessagePlayerController_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerController, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerController, msg_play_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerController, msg_play_stop_),
  };
  MessagePlayerController_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessagePlayerController_descriptor_,
      MessagePlayerController::default_instance_,
      MessagePlayerController_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessagePlayerController),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerController, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePlayerController, _is_default_instance_));
  MessageResponsePlayStart_descriptor_ = file->message_type(13);
  static const int MessageResponsePlayStart_offsets_[1] = {
  };
  MessageResponsePlayStart_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageResponsePlayStart_descriptor_,
      MessageResponsePlayStart::default_instance_,
      MessageResponsePlayStart_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageResponsePlayStart),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayStart, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayStart, _is_default_instance_));
  MessageResponsePlayStop_descriptor_ = file->message_type(14);
  static const int MessageResponsePlayStop_offsets_[1] = {
  };
  MessageResponsePlayStop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageResponsePlayStop_descriptor_,
      MessageResponsePlayStop::default_instance_,
      MessageResponsePlayStop_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageResponsePlayStop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayStop, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageResponsePlayStop, _is_default_instance_));
  ProtobufPlayerAgentToController_descriptor_ = file->message_type(15);
  static const int ProtobufPlayerAgentToController_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufPlayerAgentToController, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufPlayerAgentToController, msg_player_agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufPlayerAgentToController, msg_player_controller_),
  };
  ProtobufPlayerAgentToController_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProtobufPlayerAgentToController_descriptor_,
      ProtobufPlayerAgentToController::default_instance_,
      ProtobufPlayerAgentToController_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProtobufPlayerAgentToController),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufPlayerAgentToController, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufPlayerAgentToController, _is_default_instance_));
  EPlayerAgentCommandType_descriptor_ = file->enum_type(0);
  EPlayerControllerCommandType_descriptor_ = file->enum_type(1);
  EWho_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageHeader_descriptor_, &MessageHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessagePlayerAgent_descriptor_, &MessagePlayerAgent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayStart_descriptor_, &MessageRequestPlayStart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayPause_descriptor_, &MessageRequestPlayPause::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayStop_descriptor_, &MessageRequestPlayStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayStep_descriptor_, &MessageRequestPlayStep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayLoop_descriptor_, &MessageRequestPlayLoop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayReverse_descriptor_, &MessageRequestPlayReverse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlaySpeed_descriptor_, &MessageRequestPlaySpeed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestPlayFromPos_descriptor_, &MessageRequestPlayFromPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestSetRange_descriptor_, &MessageRequestSetRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageResponsePlayerDestroy_descriptor_, &MessageResponsePlayerDestroy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessagePlayerController_descriptor_, &MessagePlayerController::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageResponsePlayStart_descriptor_, &MessageResponsePlayStart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageResponsePlayStop_descriptor_, &MessageResponsePlayStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProtobufPlayerAgentToController_descriptor_, &ProtobufPlayerAgentToController::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() {
  delete MessageHeader::default_instance_;
  delete MessageHeader_reflection_;
  delete MessagePlayerAgent::default_instance_;
  delete MessagePlayerAgent_reflection_;
  delete MessageRequestPlayStart::default_instance_;
  delete MessageRequestPlayStart_reflection_;
  delete MessageRequestPlayPause::default_instance_;
  delete MessageRequestPlayPause_reflection_;
  delete MessageRequestPlayStop::default_instance_;
  delete MessageRequestPlayStop_reflection_;
  delete MessageRequestPlayStep::default_instance_;
  delete MessageRequestPlayStep_reflection_;
  delete MessageRequestPlayLoop::default_instance_;
  delete MessageRequestPlayLoop_reflection_;
  delete MessageRequestPlayReverse::default_instance_;
  delete MessageRequestPlayReverse_reflection_;
  delete MessageRequestPlaySpeed::default_instance_;
  delete MessageRequestPlaySpeed_reflection_;
  delete MessageRequestPlayFromPos::default_instance_;
  delete MessageRequestPlayFromPos_reflection_;
  delete MessageRequestSetRange::default_instance_;
  delete MessageRequestSetRange_reflection_;
  delete MessageResponsePlayerDestroy::default_instance_;
  delete MessageResponsePlayerDestroy_reflection_;
  delete MessagePlayerController::default_instance_;
  delete MessagePlayerController_reflection_;
  delete MessageResponsePlayStart::default_instance_;
  delete MessageResponsePlayStart_reflection_;
  delete MessageResponsePlayStop::default_instance_;
  delete MessageResponsePlayStop_reflection_;
  delete ProtobufPlayerAgentToController::default_instance_;
  delete ProtobufPlayerAgentToController_reflection_;
}

void protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)protocol_player_agent_to_controller.pr"
    "oto\022#protocol_player_agent_to_controller"
    "\"8\n\rMessageHeader\022\023\n\013module_name\030\001 \001(\t\022\022"
    "\n\nlast_error\030\002 \001(\t\"\216\010\n\022MessagePlayerAgen"
    "t\022B\n\006header\030\001 \001(\01322.protocol_player_agen"
    "t_to_controller.MessageHeader\022N\n\010cmd_typ"
    "e\030\002 \001(\0162<.protocol_player_agent_to_contr"
    "oller.EPlayerAgentCommandType\022T\n\016msg_pla"
    "y_start\030\003 \001(\0132<.protocol_player_agent_to"
    "_controller.MessageRequestPlayStart\022T\n\016m"
    "sg_play_pause\030\004 \001(\0132<.protocol_player_ag"
    "ent_to_controller.MessageRequestPlayPaus"
    "e\022R\n\rmsg_play_stop\030\005 \001(\0132;.protocol_play"
    "er_agent_to_controller.MessageRequestPla"
    "yStop\022R\n\rmsg_play_step\030\006 \001(\0132;.protocol_"
    "player_agent_to_controller.MessageReques"
    "tPlayStep\022R\n\rmsg_play_loop\030\007 \001(\0132;.proto"
    "col_player_agent_to_controller.MessageRe"
    "questPlayLoop\022X\n\020msg_play_reverse\030\010 \001(\0132"
    ">.protocol_player_agent_to_controller.Me"
    "ssageRequestPlayReverse\022T\n\016msg_play_spee"
    "d\030\t \001(\0132<.protocol_player_agent_to_contr"
    "oller.MessageRequestPlaySpeed\022Y\n\021msg_pla"
    "y_from_pos\030\n \001(\0132>.protocol_player_agent"
    "_to_controller.MessageRequestPlayFromPos"
    "\022R\n\rmsg_set_range\030\013 \001(\0132;.protocol_playe"
    "r_agent_to_controller.MessageRequestSetR"
    "ange\022]\n\022msg_player_destroy\030\014 \001(\0132A.proto"
    "col_player_agent_to_controller.MessageRe"
    "sponsePlayerDestroy\"\031\n\027MessageRequestPla"
    "yStart\"\031\n\027MessageRequestPlayPause\"\030\n\026Mes"
    "sageRequestPlayStop\")\n\026MessageRequestPla"
    "yStep\022\017\n\007forward\030\001 \001(\010\"&\n\026MessageRequest"
    "PlayLoop\022\014\n\004loop\030\001 \001(\010\",\n\031MessageRequest"
    "PlayReverse\022\017\n\007reverse\030\001 \001(\010\">\n\027MessageR"
    "equestPlaySpeed\022\021\n\tnormalize\030\001 \001(\010\022\020\n\010in"
    "crease\030\002 \001(\010\"5\n\031MessageRequestPlayFromPo"
    "s\022\030\n\020positionMillisec\030\001 \001(\003\"q\n\026MessageRe"
    "questSetRange\022 \n\030leftPlayingRangeMillise"
    "c\030\001 \001(\003\022!\n\031rightPlayingRangeMillisec\030\002 \001"
    "(\003\022\022\n\nresetRange\030\003 \001(\010\"\036\n\034MessageRespons"
    "ePlayerDestroy\"\211\002\n\027MessagePlayerControll"
    "er\022B\n\006header\030\001 \001(\01322.protocol_player_age"
    "nt_to_controller.MessageHeader\022U\n\016msg_pl"
    "ay_start\030\002 \001(\0132=.protocol_player_agent_t"
    "o_controller.MessageResponsePlayStart\022S\n"
    "\rmsg_play_stop\030\003 \001(\0132<.protocol_player_a"
    "gent_to_controller.MessageResponsePlaySt"
    "op\"\032\n\030MessageResponsePlayStart\"\031\n\027Messag"
    "eResponsePlayStop\"\214\002\n\037ProtobufPlayerAgen"
    "tToController\0229\n\006sender\030\001 \001(\0162).protocol"
    "_player_agent_to_controller.EWho\022Q\n\020msg_"
    "player_agent\030\002 \001(\01327.protocol_player_age"
    "nt_to_controller.MessagePlayerAgent\022[\n\025m"
    "sg_player_controller\030\003 \001(\0132<.protocol_pl"
    "ayer_agent_to_controller.MessagePlayerCo"
    "ntroller*\204\002\n\027EPlayerAgentCommandType\022\023\n\017"
    "PACT_PLAY_START\020\000\022\023\n\017PACT_PLAY_PAUSE\020\001\022\022"
    "\n\016PACT_PLAY_STOP\020\002\022\022\n\016PACT_PLAY_STEP\020\003\022\022"
    "\n\016PACT_PLAY_LOOP\020\004\022\025\n\021PACT_PLAY_REVERSE\020"
    "\005\022\023\n\017PACT_PLAY_SPEED\020\006\022\026\n\022PACT_PLAY_FROM"
    "_POS\020\007\022\022\n\016PACT_SET_RANGE\020\010\022\027\n\023PACT_PLAYE"
    "R_DESTROY\020\t\022\022\n\016PACT_UNDEFINED\020c*A\n\034EPlay"
    "erControllerCommandType\022\r\n\tPCCT_PING\020\000\022\022"
    "\n\016PCCT_UNDEFINED\020c*D\n\004EWho\022\022\n\016W_PLAYER_A"
    "GENT\020\000\022\027\n\023W_PLAYER_CONTROLLER\020\001\022\017\n\013W_UND"
    "EFINED\020\002b\006proto3", 2656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol_player_agent_to_controller.proto", &protobuf_RegisterTypes);
  MessageHeader::default_instance_ = new MessageHeader();
  MessagePlayerAgent::default_instance_ = new MessagePlayerAgent();
  MessageRequestPlayStart::default_instance_ = new MessageRequestPlayStart();
  MessageRequestPlayPause::default_instance_ = new MessageRequestPlayPause();
  MessageRequestPlayStop::default_instance_ = new MessageRequestPlayStop();
  MessageRequestPlayStep::default_instance_ = new MessageRequestPlayStep();
  MessageRequestPlayLoop::default_instance_ = new MessageRequestPlayLoop();
  MessageRequestPlayReverse::default_instance_ = new MessageRequestPlayReverse();
  MessageRequestPlaySpeed::default_instance_ = new MessageRequestPlaySpeed();
  MessageRequestPlayFromPos::default_instance_ = new MessageRequestPlayFromPos();
  MessageRequestSetRange::default_instance_ = new MessageRequestSetRange();
  MessageResponsePlayerDestroy::default_instance_ = new MessageResponsePlayerDestroy();
  MessagePlayerController::default_instance_ = new MessagePlayerController();
  MessageResponsePlayStart::default_instance_ = new MessageResponsePlayStart();
  MessageResponsePlayStop::default_instance_ = new MessageResponsePlayStop();
  ProtobufPlayerAgentToController::default_instance_ = new ProtobufPlayerAgentToController();
  MessageHeader::default_instance_->InitAsDefaultInstance();
  MessagePlayerAgent::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayStart::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayPause::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayStop::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayStep::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayLoop::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayReverse::default_instance_->InitAsDefaultInstance();
  MessageRequestPlaySpeed::default_instance_->InitAsDefaultInstance();
  MessageRequestPlayFromPos::default_instance_->InitAsDefaultInstance();
  MessageRequestSetRange::default_instance_->InitAsDefaultInstance();
  MessageResponsePlayerDestroy::default_instance_->InitAsDefaultInstance();
  MessagePlayerController::default_instance_->InitAsDefaultInstance();
  MessageResponsePlayStart::default_instance_->InitAsDefaultInstance();
  MessageResponsePlayStop::default_instance_->InitAsDefaultInstance();
  ProtobufPlayerAgentToController::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto {
  StaticDescriptorInitializer_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto() {
    protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  }
} static_descriptor_initializer_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto_;
const ::google::protobuf::EnumDescriptor* EPlayerAgentCommandType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPlayerAgentCommandType_descriptor_;
}
bool EPlayerAgentCommandType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 99:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EPlayerControllerCommandType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EPlayerControllerCommandType_descriptor_;
}
bool EPlayerControllerCommandType_IsValid(int value) {
  switch(value) {
    case 0:
    case 99:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EWho_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EWho_descriptor_;
}
bool EWho_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageHeader::kModuleNameFieldNumber;
const int MessageHeader::kLastErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageHeader::MessageHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageHeader)
}

void MessageHeader::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageHeader::MessageHeader(const MessageHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageHeader)
}

void MessageHeader::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageHeader::~MessageHeader() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageHeader)
  SharedDtor();
}

void MessageHeader::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageHeader_descriptor_;
}

const MessageHeader& MessageHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageHeader* MessageHeader::default_instance_ = NULL;

MessageHeader* MessageHeader::New(::google::protobuf::Arena* arena) const {
  MessageHeader* n = new MessageHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageHeader)
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MessageHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string module_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_name().data(), this->module_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol_player_agent_to_controller.MessageHeader.module_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_last_error;
        break;
      }

      // optional string last_error = 2;
      case 2: {
        if (tag == 18) {
         parse_last_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_error().data(), this->last_error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol_player_agent_to_controller.MessageHeader.last_error"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageHeader)
  return false;
#undef DO_
}

void MessageHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageHeader)
  // optional string module_name = 1;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_player_agent_to_controller.MessageHeader.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->module_name(), output);
  }

  // optional string last_error = 2;
  if (this->last_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_error().data(), this->last_error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_player_agent_to_controller.MessageHeader.last_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_error(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageHeader)
}

::google::protobuf::uint8* MessageHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageHeader)
  // optional string module_name = 1;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_player_agent_to_controller.MessageHeader.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->module_name(), target);
  }

  // optional string last_error = 2;
  if (this->last_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_error().data(), this->last_error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol_player_agent_to_controller.MessageHeader.last_error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageHeader)
  return target;
}

int MessageHeader::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageHeader)
  int total_size = 0;

  // optional string module_name = 1;
  if (this->module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_name());
  }

  // optional string last_error = 2;
  if (this->last_error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageHeader)
    MergeFrom(*source);
  }
}

void MessageHeader::MergeFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.module_name().size() > 0) {

    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  if (from.last_error().size() > 0) {

    last_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_error_);
  }
}

void MessageHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHeader::CopyFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHeader::IsInitialized() const {

  return true;
}

void MessageHeader::Swap(MessageHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageHeader::InternalSwap(MessageHeader* other) {
  module_name_.Swap(&other->module_name_);
  last_error_.Swap(&other->last_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageHeader_descriptor_;
  metadata.reflection = MessageHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageHeader

// optional string module_name = 1;
void MessageHeader::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageHeader::module_name() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageHeader.module_name)
  return module_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHeader::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageHeader.module_name)
}
 void MessageHeader::set_module_name(const char* value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_player_agent_to_controller.MessageHeader.module_name)
}
 void MessageHeader::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_player_agent_to_controller.MessageHeader.module_name)
}
 ::std::string* MessageHeader::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessageHeader.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageHeader::release_module_name() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessageHeader.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHeader::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessageHeader.module_name)
}

// optional string last_error = 2;
void MessageHeader::clear_last_error() {
  last_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageHeader::last_error() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageHeader.last_error)
  return last_error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHeader::set_last_error(const ::std::string& value) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageHeader.last_error)
}
 void MessageHeader::set_last_error(const char* value) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_player_agent_to_controller.MessageHeader.last_error)
}
 void MessageHeader::set_last_error(const char* value, size_t size) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_player_agent_to_controller.MessageHeader.last_error)
}
 ::std::string* MessageHeader::mutable_last_error() {
  
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessageHeader.last_error)
  return last_error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageHeader::release_last_error() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessageHeader.last_error)
  
  return last_error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHeader::set_allocated_last_error(::std::string* last_error) {
  if (last_error != NULL) {
    
  } else {
    
  }
  last_error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_error);
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessageHeader.last_error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePlayerAgent::kHeaderFieldNumber;
const int MessagePlayerAgent::kCmdTypeFieldNumber;
const int MessagePlayerAgent::kMsgPlayStartFieldNumber;
const int MessagePlayerAgent::kMsgPlayPauseFieldNumber;
const int MessagePlayerAgent::kMsgPlayStopFieldNumber;
const int MessagePlayerAgent::kMsgPlayStepFieldNumber;
const int MessagePlayerAgent::kMsgPlayLoopFieldNumber;
const int MessagePlayerAgent::kMsgPlayReverseFieldNumber;
const int MessagePlayerAgent::kMsgPlaySpeedFieldNumber;
const int MessagePlayerAgent::kMsgPlayFromPosFieldNumber;
const int MessagePlayerAgent::kMsgSetRangeFieldNumber;
const int MessagePlayerAgent::kMsgPlayerDestroyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePlayerAgent::MessagePlayerAgent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessagePlayerAgent)
}

void MessagePlayerAgent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::protocol_player_agent_to_controller::MessageHeader*>(&::protocol_player_agent_to_controller::MessageHeader::default_instance());
  msg_play_start_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayStart*>(&::protocol_player_agent_to_controller::MessageRequestPlayStart::default_instance());
  msg_play_pause_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayPause*>(&::protocol_player_agent_to_controller::MessageRequestPlayPause::default_instance());
  msg_play_stop_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayStop*>(&::protocol_player_agent_to_controller::MessageRequestPlayStop::default_instance());
  msg_play_step_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayStep*>(&::protocol_player_agent_to_controller::MessageRequestPlayStep::default_instance());
  msg_play_loop_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayLoop*>(&::protocol_player_agent_to_controller::MessageRequestPlayLoop::default_instance());
  msg_play_reverse_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayReverse*>(&::protocol_player_agent_to_controller::MessageRequestPlayReverse::default_instance());
  msg_play_speed_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlaySpeed*>(&::protocol_player_agent_to_controller::MessageRequestPlaySpeed::default_instance());
  msg_play_from_pos_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestPlayFromPos*>(&::protocol_player_agent_to_controller::MessageRequestPlayFromPos::default_instance());
  msg_set_range_ = const_cast< ::protocol_player_agent_to_controller::MessageRequestSetRange*>(&::protocol_player_agent_to_controller::MessageRequestSetRange::default_instance());
  msg_player_destroy_ = const_cast< ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy*>(&::protocol_player_agent_to_controller::MessageResponsePlayerDestroy::default_instance());
}

MessagePlayerAgent::MessagePlayerAgent(const MessagePlayerAgent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessagePlayerAgent)
}

void MessagePlayerAgent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
  cmd_type_ = 0;
  msg_play_start_ = NULL;
  msg_play_pause_ = NULL;
  msg_play_stop_ = NULL;
  msg_play_step_ = NULL;
  msg_play_loop_ = NULL;
  msg_play_reverse_ = NULL;
  msg_play_speed_ = NULL;
  msg_play_from_pos_ = NULL;
  msg_set_range_ = NULL;
  msg_player_destroy_ = NULL;
}

MessagePlayerAgent::~MessagePlayerAgent() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessagePlayerAgent)
  SharedDtor();
}

void MessagePlayerAgent::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete msg_play_start_;
    delete msg_play_pause_;
    delete msg_play_stop_;
    delete msg_play_step_;
    delete msg_play_loop_;
    delete msg_play_reverse_;
    delete msg_play_speed_;
    delete msg_play_from_pos_;
    delete msg_set_range_;
    delete msg_player_destroy_;
  }
}

void MessagePlayerAgent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePlayerAgent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessagePlayerAgent_descriptor_;
}

const MessagePlayerAgent& MessagePlayerAgent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessagePlayerAgent* MessagePlayerAgent::default_instance_ = NULL;

MessagePlayerAgent* MessagePlayerAgent::New(::google::protobuf::Arena* arena) const {
  MessagePlayerAgent* n = new MessagePlayerAgent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagePlayerAgent::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  cmd_type_ = 0;
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_pause_ != NULL) delete msg_play_pause_;
  msg_play_pause_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_step_ != NULL) delete msg_play_step_;
  msg_play_step_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_loop_ != NULL) delete msg_play_loop_;
  msg_play_loop_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_reverse_ != NULL) delete msg_play_reverse_;
  msg_play_reverse_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_speed_ != NULL) delete msg_play_speed_;
  msg_play_speed_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_from_pos_ != NULL) delete msg_play_from_pos_;
  msg_play_from_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_set_range_ != NULL) delete msg_set_range_;
  msg_set_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_player_destroy_ != NULL) delete msg_player_destroy_;
  msg_player_destroy_ = NULL;
}

bool MessagePlayerAgent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cmd_type;
        break;
      }

      // optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
      case 2: {
        if (tag == 16) {
         parse_cmd_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_type(static_cast< ::protocol_player_agent_to_controller::EPlayerAgentCommandType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg_play_start;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
      case 3: {
        if (tag == 26) {
         parse_msg_play_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_start()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg_play_pause;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
      case 4: {
        if (tag == 34) {
         parse_msg_play_pause:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_pause()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msg_play_stop;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
      case 5: {
        if (tag == 42) {
         parse_msg_play_stop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_stop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_msg_play_step;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
      case 6: {
        if (tag == 50) {
         parse_msg_play_step:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_step()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_msg_play_loop;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
      case 7: {
        if (tag == 58) {
         parse_msg_play_loop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_loop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_msg_play_reverse;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
      case 8: {
        if (tag == 66) {
         parse_msg_play_reverse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_reverse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_msg_play_speed;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
      case 9: {
        if (tag == 74) {
         parse_msg_play_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_msg_play_from_pos;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
      case 10: {
        if (tag == 82) {
         parse_msg_play_from_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_from_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_msg_set_range;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
      case 11: {
        if (tag == 90) {
         parse_msg_set_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_set_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_msg_player_destroy;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
      case 12: {
        if (tag == 98) {
         parse_msg_player_destroy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_player_destroy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessagePlayerAgent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessagePlayerAgent)
  return false;
#undef DO_
}

void MessagePlayerAgent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
  if (this->cmd_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd_type(), output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
  if (this->has_msg_play_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_play_start_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
  if (this->has_msg_play_pause()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->msg_play_pause_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
  if (this->has_msg_play_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->msg_play_stop_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
  if (this->has_msg_play_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->msg_play_step_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
  if (this->has_msg_play_loop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->msg_play_loop_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
  if (this->has_msg_play_reverse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->msg_play_reverse_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
  if (this->has_msg_play_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->msg_play_speed_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
  if (this->has_msg_play_from_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->msg_play_from_pos_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
  if (this->has_msg_set_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->msg_set_range_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
  if (this->has_msg_player_destroy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->msg_player_destroy_, output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessagePlayerAgent)
}

::google::protobuf::uint8* MessagePlayerAgent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
  if (this->cmd_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd_type(), target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
  if (this->has_msg_play_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->msg_play_start_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
  if (this->has_msg_play_pause()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->msg_play_pause_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
  if (this->has_msg_play_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->msg_play_stop_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
  if (this->has_msg_play_step()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->msg_play_step_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
  if (this->has_msg_play_loop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->msg_play_loop_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
  if (this->has_msg_play_reverse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->msg_play_reverse_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
  if (this->has_msg_play_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->msg_play_speed_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
  if (this->has_msg_play_from_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->msg_play_from_pos_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
  if (this->has_msg_set_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->msg_set_range_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
  if (this->has_msg_player_destroy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->msg_player_destroy_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessagePlayerAgent)
  return target;
}

int MessagePlayerAgent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  int total_size = 0;

  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
  if (this->cmd_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_type());
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
  if (this->has_msg_play_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_start_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
  if (this->has_msg_play_pause()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_pause_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
  if (this->has_msg_play_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_stop_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
  if (this->has_msg_play_step()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_step_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
  if (this->has_msg_play_loop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_loop_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
  if (this->has_msg_play_reverse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_reverse_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
  if (this->has_msg_play_speed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_speed_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
  if (this->has_msg_play_from_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_from_pos_);
  }

  // optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
  if (this->has_msg_set_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_set_range_);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
  if (this->has_msg_player_destroy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_player_destroy_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePlayerAgent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessagePlayerAgent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePlayerAgent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessagePlayerAgent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessagePlayerAgent)
    MergeFrom(*source);
  }
}

void MessagePlayerAgent::MergeFrom(const MessagePlayerAgent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_header()) {
    mutable_header()->::protocol_player_agent_to_controller::MessageHeader::MergeFrom(from.header());
  }
  if (from.cmd_type() != 0) {
    set_cmd_type(from.cmd_type());
  }
  if (from.has_msg_play_start()) {
    mutable_msg_play_start()->::protocol_player_agent_to_controller::MessageRequestPlayStart::MergeFrom(from.msg_play_start());
  }
  if (from.has_msg_play_pause()) {
    mutable_msg_play_pause()->::protocol_player_agent_to_controller::MessageRequestPlayPause::MergeFrom(from.msg_play_pause());
  }
  if (from.has_msg_play_stop()) {
    mutable_msg_play_stop()->::protocol_player_agent_to_controller::MessageRequestPlayStop::MergeFrom(from.msg_play_stop());
  }
  if (from.has_msg_play_step()) {
    mutable_msg_play_step()->::protocol_player_agent_to_controller::MessageRequestPlayStep::MergeFrom(from.msg_play_step());
  }
  if (from.has_msg_play_loop()) {
    mutable_msg_play_loop()->::protocol_player_agent_to_controller::MessageRequestPlayLoop::MergeFrom(from.msg_play_loop());
  }
  if (from.has_msg_play_reverse()) {
    mutable_msg_play_reverse()->::protocol_player_agent_to_controller::MessageRequestPlayReverse::MergeFrom(from.msg_play_reverse());
  }
  if (from.has_msg_play_speed()) {
    mutable_msg_play_speed()->::protocol_player_agent_to_controller::MessageRequestPlaySpeed::MergeFrom(from.msg_play_speed());
  }
  if (from.has_msg_play_from_pos()) {
    mutable_msg_play_from_pos()->::protocol_player_agent_to_controller::MessageRequestPlayFromPos::MergeFrom(from.msg_play_from_pos());
  }
  if (from.has_msg_set_range()) {
    mutable_msg_set_range()->::protocol_player_agent_to_controller::MessageRequestSetRange::MergeFrom(from.msg_set_range());
  }
  if (from.has_msg_player_destroy()) {
    mutable_msg_player_destroy()->::protocol_player_agent_to_controller::MessageResponsePlayerDestroy::MergeFrom(from.msg_player_destroy());
  }
}

void MessagePlayerAgent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePlayerAgent::CopyFrom(const MessagePlayerAgent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessagePlayerAgent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePlayerAgent::IsInitialized() const {

  return true;
}

void MessagePlayerAgent::Swap(MessagePlayerAgent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePlayerAgent::InternalSwap(MessagePlayerAgent* other) {
  std::swap(header_, other->header_);
  std::swap(cmd_type_, other->cmd_type_);
  std::swap(msg_play_start_, other->msg_play_start_);
  std::swap(msg_play_pause_, other->msg_play_pause_);
  std::swap(msg_play_stop_, other->msg_play_stop_);
  std::swap(msg_play_step_, other->msg_play_step_);
  std::swap(msg_play_loop_, other->msg_play_loop_);
  std::swap(msg_play_reverse_, other->msg_play_reverse_);
  std::swap(msg_play_speed_, other->msg_play_speed_);
  std::swap(msg_play_from_pos_, other->msg_play_from_pos_);
  std::swap(msg_set_range_, other->msg_set_range_);
  std::swap(msg_player_destroy_, other->msg_player_destroy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessagePlayerAgent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessagePlayerAgent_descriptor_;
  metadata.reflection = MessagePlayerAgent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessagePlayerAgent

// optional .protocol_player_agent_to_controller.MessageHeader header = 1;
bool MessagePlayerAgent::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void MessagePlayerAgent::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageHeader& MessagePlayerAgent::header() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::protocol_player_agent_to_controller::MessageHeader* MessagePlayerAgent::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol_player_agent_to_controller::MessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  return header_;
}
::protocol_player_agent_to_controller::MessageHeader* MessagePlayerAgent::release_header() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  
  ::protocol_player_agent_to_controller::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.header)
}

// optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
void MessagePlayerAgent::clear_cmd_type() {
  cmd_type_ = 0;
}
 ::protocol_player_agent_to_controller::EPlayerAgentCommandType MessagePlayerAgent::cmd_type() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.cmd_type)
  return static_cast< ::protocol_player_agent_to_controller::EPlayerAgentCommandType >(cmd_type_);
}
 void MessagePlayerAgent::set_cmd_type(::protocol_player_agent_to_controller::EPlayerAgentCommandType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessagePlayerAgent.cmd_type)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
bool MessagePlayerAgent::has_msg_play_start() const {
  return !_is_default_instance_ && msg_play_start_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_start() {
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayStart& MessagePlayerAgent::msg_play_start() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  return msg_play_start_ != NULL ? *msg_play_start_ : *default_instance_->msg_play_start_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStart* MessagePlayerAgent::mutable_msg_play_start() {
  
  if (msg_play_start_ == NULL) {
    msg_play_start_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStart;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  return msg_play_start_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStart* MessagePlayerAgent::release_msg_play_start() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStart* temp = msg_play_start_;
  msg_play_start_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageRequestPlayStart* msg_play_start) {
  delete msg_play_start_;
  msg_play_start_ = msg_play_start;
  if (msg_play_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
bool MessagePlayerAgent::has_msg_play_pause() const {
  return !_is_default_instance_ && msg_play_pause_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_pause() {
  if (GetArenaNoVirtual() == NULL && msg_play_pause_ != NULL) delete msg_play_pause_;
  msg_play_pause_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayPause& MessagePlayerAgent::msg_play_pause() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  return msg_play_pause_ != NULL ? *msg_play_pause_ : *default_instance_->msg_play_pause_;
}
::protocol_player_agent_to_controller::MessageRequestPlayPause* MessagePlayerAgent::mutable_msg_play_pause() {
  
  if (msg_play_pause_ == NULL) {
    msg_play_pause_ = new ::protocol_player_agent_to_controller::MessageRequestPlayPause;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  return msg_play_pause_;
}
::protocol_player_agent_to_controller::MessageRequestPlayPause* MessagePlayerAgent::release_msg_play_pause() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayPause* temp = msg_play_pause_;
  msg_play_pause_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_pause(::protocol_player_agent_to_controller::MessageRequestPlayPause* msg_play_pause) {
  delete msg_play_pause_;
  msg_play_pause_ = msg_play_pause;
  if (msg_play_pause) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
bool MessagePlayerAgent::has_msg_play_stop() const {
  return !_is_default_instance_ && msg_play_stop_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_stop() {
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayStop& MessagePlayerAgent::msg_play_stop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  return msg_play_stop_ != NULL ? *msg_play_stop_ : *default_instance_->msg_play_stop_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStop* MessagePlayerAgent::mutable_msg_play_stop() {
  
  if (msg_play_stop_ == NULL) {
    msg_play_stop_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  return msg_play_stop_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStop* MessagePlayerAgent::release_msg_play_stop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStop* temp = msg_play_stop_;
  msg_play_stop_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageRequestPlayStop* msg_play_stop) {
  delete msg_play_stop_;
  msg_play_stop_ = msg_play_stop;
  if (msg_play_stop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
bool MessagePlayerAgent::has_msg_play_step() const {
  return !_is_default_instance_ && msg_play_step_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_step() {
  if (GetArenaNoVirtual() == NULL && msg_play_step_ != NULL) delete msg_play_step_;
  msg_play_step_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayStep& MessagePlayerAgent::msg_play_step() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  return msg_play_step_ != NULL ? *msg_play_step_ : *default_instance_->msg_play_step_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStep* MessagePlayerAgent::mutable_msg_play_step() {
  
  if (msg_play_step_ == NULL) {
    msg_play_step_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStep;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  return msg_play_step_;
}
::protocol_player_agent_to_controller::MessageRequestPlayStep* MessagePlayerAgent::release_msg_play_step() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStep* temp = msg_play_step_;
  msg_play_step_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_step(::protocol_player_agent_to_controller::MessageRequestPlayStep* msg_play_step) {
  delete msg_play_step_;
  msg_play_step_ = msg_play_step;
  if (msg_play_step) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
bool MessagePlayerAgent::has_msg_play_loop() const {
  return !_is_default_instance_ && msg_play_loop_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_loop() {
  if (GetArenaNoVirtual() == NULL && msg_play_loop_ != NULL) delete msg_play_loop_;
  msg_play_loop_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayLoop& MessagePlayerAgent::msg_play_loop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  return msg_play_loop_ != NULL ? *msg_play_loop_ : *default_instance_->msg_play_loop_;
}
::protocol_player_agent_to_controller::MessageRequestPlayLoop* MessagePlayerAgent::mutable_msg_play_loop() {
  
  if (msg_play_loop_ == NULL) {
    msg_play_loop_ = new ::protocol_player_agent_to_controller::MessageRequestPlayLoop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  return msg_play_loop_;
}
::protocol_player_agent_to_controller::MessageRequestPlayLoop* MessagePlayerAgent::release_msg_play_loop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayLoop* temp = msg_play_loop_;
  msg_play_loop_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_loop(::protocol_player_agent_to_controller::MessageRequestPlayLoop* msg_play_loop) {
  delete msg_play_loop_;
  msg_play_loop_ = msg_play_loop;
  if (msg_play_loop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
bool MessagePlayerAgent::has_msg_play_reverse() const {
  return !_is_default_instance_ && msg_play_reverse_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_reverse() {
  if (GetArenaNoVirtual() == NULL && msg_play_reverse_ != NULL) delete msg_play_reverse_;
  msg_play_reverse_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayReverse& MessagePlayerAgent::msg_play_reverse() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  return msg_play_reverse_ != NULL ? *msg_play_reverse_ : *default_instance_->msg_play_reverse_;
}
::protocol_player_agent_to_controller::MessageRequestPlayReverse* MessagePlayerAgent::mutable_msg_play_reverse() {
  
  if (msg_play_reverse_ == NULL) {
    msg_play_reverse_ = new ::protocol_player_agent_to_controller::MessageRequestPlayReverse;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  return msg_play_reverse_;
}
::protocol_player_agent_to_controller::MessageRequestPlayReverse* MessagePlayerAgent::release_msg_play_reverse() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayReverse* temp = msg_play_reverse_;
  msg_play_reverse_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_reverse(::protocol_player_agent_to_controller::MessageRequestPlayReverse* msg_play_reverse) {
  delete msg_play_reverse_;
  msg_play_reverse_ = msg_play_reverse;
  if (msg_play_reverse) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
bool MessagePlayerAgent::has_msg_play_speed() const {
  return !_is_default_instance_ && msg_play_speed_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_speed() {
  if (GetArenaNoVirtual() == NULL && msg_play_speed_ != NULL) delete msg_play_speed_;
  msg_play_speed_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlaySpeed& MessagePlayerAgent::msg_play_speed() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  return msg_play_speed_ != NULL ? *msg_play_speed_ : *default_instance_->msg_play_speed_;
}
::protocol_player_agent_to_controller::MessageRequestPlaySpeed* MessagePlayerAgent::mutable_msg_play_speed() {
  
  if (msg_play_speed_ == NULL) {
    msg_play_speed_ = new ::protocol_player_agent_to_controller::MessageRequestPlaySpeed;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  return msg_play_speed_;
}
::protocol_player_agent_to_controller::MessageRequestPlaySpeed* MessagePlayerAgent::release_msg_play_speed() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  
  ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* temp = msg_play_speed_;
  msg_play_speed_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_speed(::protocol_player_agent_to_controller::MessageRequestPlaySpeed* msg_play_speed) {
  delete msg_play_speed_;
  msg_play_speed_ = msg_play_speed;
  if (msg_play_speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
bool MessagePlayerAgent::has_msg_play_from_pos() const {
  return !_is_default_instance_ && msg_play_from_pos_ != NULL;
}
void MessagePlayerAgent::clear_msg_play_from_pos() {
  if (GetArenaNoVirtual() == NULL && msg_play_from_pos_ != NULL) delete msg_play_from_pos_;
  msg_play_from_pos_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestPlayFromPos& MessagePlayerAgent::msg_play_from_pos() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  return msg_play_from_pos_ != NULL ? *msg_play_from_pos_ : *default_instance_->msg_play_from_pos_;
}
::protocol_player_agent_to_controller::MessageRequestPlayFromPos* MessagePlayerAgent::mutable_msg_play_from_pos() {
  
  if (msg_play_from_pos_ == NULL) {
    msg_play_from_pos_ = new ::protocol_player_agent_to_controller::MessageRequestPlayFromPos;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  return msg_play_from_pos_;
}
::protocol_player_agent_to_controller::MessageRequestPlayFromPos* MessagePlayerAgent::release_msg_play_from_pos() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* temp = msg_play_from_pos_;
  msg_play_from_pos_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_play_from_pos(::protocol_player_agent_to_controller::MessageRequestPlayFromPos* msg_play_from_pos) {
  delete msg_play_from_pos_;
  msg_play_from_pos_ = msg_play_from_pos;
  if (msg_play_from_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
}

// optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
bool MessagePlayerAgent::has_msg_set_range() const {
  return !_is_default_instance_ && msg_set_range_ != NULL;
}
void MessagePlayerAgent::clear_msg_set_range() {
  if (GetArenaNoVirtual() == NULL && msg_set_range_ != NULL) delete msg_set_range_;
  msg_set_range_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageRequestSetRange& MessagePlayerAgent::msg_set_range() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  return msg_set_range_ != NULL ? *msg_set_range_ : *default_instance_->msg_set_range_;
}
::protocol_player_agent_to_controller::MessageRequestSetRange* MessagePlayerAgent::mutable_msg_set_range() {
  
  if (msg_set_range_ == NULL) {
    msg_set_range_ = new ::protocol_player_agent_to_controller::MessageRequestSetRange;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  return msg_set_range_;
}
::protocol_player_agent_to_controller::MessageRequestSetRange* MessagePlayerAgent::release_msg_set_range() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  
  ::protocol_player_agent_to_controller::MessageRequestSetRange* temp = msg_set_range_;
  msg_set_range_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_set_range(::protocol_player_agent_to_controller::MessageRequestSetRange* msg_set_range) {
  delete msg_set_range_;
  msg_set_range_ = msg_set_range;
  if (msg_set_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
bool MessagePlayerAgent::has_msg_player_destroy() const {
  return !_is_default_instance_ && msg_player_destroy_ != NULL;
}
void MessagePlayerAgent::clear_msg_player_destroy() {
  if (GetArenaNoVirtual() == NULL && msg_player_destroy_ != NULL) delete msg_player_destroy_;
  msg_player_destroy_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy& MessagePlayerAgent::msg_player_destroy() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  return msg_player_destroy_ != NULL ? *msg_player_destroy_ : *default_instance_->msg_player_destroy_;
}
::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* MessagePlayerAgent::mutable_msg_player_destroy() {
  
  if (msg_player_destroy_ == NULL) {
    msg_player_destroy_ = new ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  return msg_player_destroy_;
}
::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* MessagePlayerAgent::release_msg_player_destroy() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* temp = msg_player_destroy_;
  msg_player_destroy_ = NULL;
  return temp;
}
void MessagePlayerAgent::set_allocated_msg_player_destroy(::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* msg_player_destroy) {
  delete msg_player_destroy_;
  msg_player_destroy_ = msg_player_destroy;
  if (msg_player_destroy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayStart::MessageRequestPlayStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayStart)
}

void MessageRequestPlayStart::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayStart::MessageRequestPlayStart(const MessageRequestPlayStart& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayStart)
}

void MessageRequestPlayStart::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageRequestPlayStart::~MessageRequestPlayStart() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayStart)
  SharedDtor();
}

void MessageRequestPlayStart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayStart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayStart_descriptor_;
}

const MessageRequestPlayStart& MessageRequestPlayStart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayStart* MessageRequestPlayStart::default_instance_ = NULL;

MessageRequestPlayStart* MessageRequestPlayStart::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayStart* n = new MessageRequestPlayStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayStart::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
}

bool MessageRequestPlayStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayStart)
  return false;
#undef DO_
}

void MessageRequestPlayStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayStart)
}

::google::protobuf::uint8* MessageRequestPlayStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayStart)
  return target;
}

int MessageRequestPlayStart::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayStart* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayStart)
    MergeFrom(*source);
  }
}

void MessageRequestPlayStart::MergeFrom(const MessageRequestPlayStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageRequestPlayStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayStart::CopyFrom(const MessageRequestPlayStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayStart::IsInitialized() const {

  return true;
}

void MessageRequestPlayStart::Swap(MessageRequestPlayStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayStart::InternalSwap(MessageRequestPlayStart* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayStart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayStart_descriptor_;
  metadata.reflection = MessageRequestPlayStart_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayStart

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayPause::MessageRequestPlayPause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayPause)
}

void MessageRequestPlayPause::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayPause::MessageRequestPlayPause(const MessageRequestPlayPause& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayPause)
}

void MessageRequestPlayPause::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageRequestPlayPause::~MessageRequestPlayPause() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayPause)
  SharedDtor();
}

void MessageRequestPlayPause::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayPause::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayPause::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayPause_descriptor_;
}

const MessageRequestPlayPause& MessageRequestPlayPause::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayPause* MessageRequestPlayPause::default_instance_ = NULL;

MessageRequestPlayPause* MessageRequestPlayPause::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayPause* n = new MessageRequestPlayPause;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayPause::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
}

bool MessageRequestPlayPause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayPause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayPause)
  return false;
#undef DO_
}

void MessageRequestPlayPause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayPause)
}

::google::protobuf::uint8* MessageRequestPlayPause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayPause)
  return target;
}

int MessageRequestPlayPause::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayPause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayPause* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayPause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayPause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayPause)
    MergeFrom(*source);
  }
}

void MessageRequestPlayPause::MergeFrom(const MessageRequestPlayPause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageRequestPlayPause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayPause::CopyFrom(const MessageRequestPlayPause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayPause::IsInitialized() const {

  return true;
}

void MessageRequestPlayPause::Swap(MessageRequestPlayPause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayPause::InternalSwap(MessageRequestPlayPause* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayPause::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayPause_descriptor_;
  metadata.reflection = MessageRequestPlayPause_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayPause

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayStop::MessageRequestPlayStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayStop)
}

void MessageRequestPlayStop::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayStop::MessageRequestPlayStop(const MessageRequestPlayStop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayStop)
}

void MessageRequestPlayStop::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageRequestPlayStop::~MessageRequestPlayStop() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayStop)
  SharedDtor();
}

void MessageRequestPlayStop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayStop_descriptor_;
}

const MessageRequestPlayStop& MessageRequestPlayStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayStop* MessageRequestPlayStop::default_instance_ = NULL;

MessageRequestPlayStop* MessageRequestPlayStop::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayStop* n = new MessageRequestPlayStop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayStop::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
}

bool MessageRequestPlayStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayStop)
  return false;
#undef DO_
}

void MessageRequestPlayStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayStop)
}

::google::protobuf::uint8* MessageRequestPlayStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayStop)
  return target;
}

int MessageRequestPlayStop::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayStop* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayStop)
    MergeFrom(*source);
  }
}

void MessageRequestPlayStop::MergeFrom(const MessageRequestPlayStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageRequestPlayStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayStop::CopyFrom(const MessageRequestPlayStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayStop::IsInitialized() const {

  return true;
}

void MessageRequestPlayStop::Swap(MessageRequestPlayStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayStop::InternalSwap(MessageRequestPlayStop* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayStop_descriptor_;
  metadata.reflection = MessageRequestPlayStop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayStop

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestPlayStep::kForwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayStep::MessageRequestPlayStep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayStep)
}

void MessageRequestPlayStep::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayStep::MessageRequestPlayStep(const MessageRequestPlayStep& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayStep)
}

void MessageRequestPlayStep::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  forward_ = false;
}

MessageRequestPlayStep::~MessageRequestPlayStep() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayStep)
  SharedDtor();
}

void MessageRequestPlayStep::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayStep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayStep_descriptor_;
}

const MessageRequestPlayStep& MessageRequestPlayStep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayStep* MessageRequestPlayStep::default_instance_ = NULL;

MessageRequestPlayStep* MessageRequestPlayStep::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayStep* n = new MessageRequestPlayStep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayStep::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  forward_ = false;
}

bool MessageRequestPlayStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool forward = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayStep)
  return false;
#undef DO_
}

void MessageRequestPlayStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  // optional bool forward = 1;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->forward(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayStep)
}

::google::protobuf::uint8* MessageRequestPlayStep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  // optional bool forward = 1;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->forward(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayStep)
  return target;
}

int MessageRequestPlayStep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  int total_size = 0;

  // optional bool forward = 1;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayStep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayStep* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayStep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayStep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayStep)
    MergeFrom(*source);
  }
}

void MessageRequestPlayStep::MergeFrom(const MessageRequestPlayStep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
}

void MessageRequestPlayStep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayStep::CopyFrom(const MessageRequestPlayStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayStep::IsInitialized() const {

  return true;
}

void MessageRequestPlayStep::Swap(MessageRequestPlayStep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayStep::InternalSwap(MessageRequestPlayStep* other) {
  std::swap(forward_, other->forward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayStep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayStep_descriptor_;
  metadata.reflection = MessageRequestPlayStep_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayStep

// optional bool forward = 1;
void MessageRequestPlayStep::clear_forward() {
  forward_ = false;
}
 bool MessageRequestPlayStep::forward() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayStep.forward)
  return forward_;
}
 void MessageRequestPlayStep::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayStep.forward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestPlayLoop::kLoopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayLoop::MessageRequestPlayLoop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayLoop)
}

void MessageRequestPlayLoop::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayLoop::MessageRequestPlayLoop(const MessageRequestPlayLoop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayLoop)
}

void MessageRequestPlayLoop::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  loop_ = false;
}

MessageRequestPlayLoop::~MessageRequestPlayLoop() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  SharedDtor();
}

void MessageRequestPlayLoop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayLoop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayLoop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayLoop_descriptor_;
}

const MessageRequestPlayLoop& MessageRequestPlayLoop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayLoop* MessageRequestPlayLoop::default_instance_ = NULL;

MessageRequestPlayLoop* MessageRequestPlayLoop::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayLoop* n = new MessageRequestPlayLoop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayLoop::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  loop_ = false;
}

bool MessageRequestPlayLoop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool loop = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &loop_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  return false;
#undef DO_
}

void MessageRequestPlayLoop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  // optional bool loop = 1;
  if (this->loop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->loop(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayLoop)
}

::google::protobuf::uint8* MessageRequestPlayLoop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  // optional bool loop = 1;
  if (this->loop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->loop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  return target;
}

int MessageRequestPlayLoop::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  int total_size = 0;

  // optional bool loop = 1;
  if (this->loop() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayLoop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayLoop* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayLoop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayLoop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayLoop)
    MergeFrom(*source);
  }
}

void MessageRequestPlayLoop::MergeFrom(const MessageRequestPlayLoop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.loop() != 0) {
    set_loop(from.loop());
  }
}

void MessageRequestPlayLoop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayLoop::CopyFrom(const MessageRequestPlayLoop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayLoop::IsInitialized() const {

  return true;
}

void MessageRequestPlayLoop::Swap(MessageRequestPlayLoop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayLoop::InternalSwap(MessageRequestPlayLoop* other) {
  std::swap(loop_, other->loop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayLoop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayLoop_descriptor_;
  metadata.reflection = MessageRequestPlayLoop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayLoop

// optional bool loop = 1;
void MessageRequestPlayLoop::clear_loop() {
  loop_ = false;
}
 bool MessageRequestPlayLoop::loop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayLoop.loop)
  return loop_;
}
 void MessageRequestPlayLoop::set_loop(bool value) {
  
  loop_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayLoop.loop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestPlayReverse::kReverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayReverse::MessageRequestPlayReverse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayReverse)
}

void MessageRequestPlayReverse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayReverse::MessageRequestPlayReverse(const MessageRequestPlayReverse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayReverse)
}

void MessageRequestPlayReverse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  reverse_ = false;
}

MessageRequestPlayReverse::~MessageRequestPlayReverse() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  SharedDtor();
}

void MessageRequestPlayReverse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayReverse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayReverse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayReverse_descriptor_;
}

const MessageRequestPlayReverse& MessageRequestPlayReverse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayReverse* MessageRequestPlayReverse::default_instance_ = NULL;

MessageRequestPlayReverse* MessageRequestPlayReverse::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayReverse* n = new MessageRequestPlayReverse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayReverse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  reverse_ = false;
}

bool MessageRequestPlayReverse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reverse = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  return false;
#undef DO_
}

void MessageRequestPlayReverse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  // optional bool reverse = 1;
  if (this->reverse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reverse(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayReverse)
}

::google::protobuf::uint8* MessageRequestPlayReverse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  // optional bool reverse = 1;
  if (this->reverse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reverse(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  return target;
}

int MessageRequestPlayReverse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  int total_size = 0;

  // optional bool reverse = 1;
  if (this->reverse() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayReverse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayReverse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayReverse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayReverse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayReverse)
    MergeFrom(*source);
  }
}

void MessageRequestPlayReverse::MergeFrom(const MessageRequestPlayReverse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.reverse() != 0) {
    set_reverse(from.reverse());
  }
}

void MessageRequestPlayReverse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayReverse::CopyFrom(const MessageRequestPlayReverse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayReverse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayReverse::IsInitialized() const {

  return true;
}

void MessageRequestPlayReverse::Swap(MessageRequestPlayReverse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayReverse::InternalSwap(MessageRequestPlayReverse* other) {
  std::swap(reverse_, other->reverse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayReverse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayReverse_descriptor_;
  metadata.reflection = MessageRequestPlayReverse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayReverse

// optional bool reverse = 1;
void MessageRequestPlayReverse::clear_reverse() {
  reverse_ = false;
}
 bool MessageRequestPlayReverse::reverse() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayReverse.reverse)
  return reverse_;
}
 void MessageRequestPlayReverse::set_reverse(bool value) {
  
  reverse_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayReverse.reverse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestPlaySpeed::kNormalizeFieldNumber;
const int MessageRequestPlaySpeed::kIncreaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlaySpeed::MessageRequestPlaySpeed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
}

void MessageRequestPlaySpeed::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlaySpeed::MessageRequestPlaySpeed(const MessageRequestPlaySpeed& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
}

void MessageRequestPlaySpeed::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  normalize_ = false;
  increase_ = false;
}

MessageRequestPlaySpeed::~MessageRequestPlaySpeed() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  SharedDtor();
}

void MessageRequestPlaySpeed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlaySpeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlaySpeed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlaySpeed_descriptor_;
}

const MessageRequestPlaySpeed& MessageRequestPlaySpeed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlaySpeed* MessageRequestPlaySpeed::default_instance_ = NULL;

MessageRequestPlaySpeed* MessageRequestPlaySpeed::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlaySpeed* n = new MessageRequestPlaySpeed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlaySpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessageRequestPlaySpeed, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageRequestPlaySpeed*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(normalize_, increase_);

#undef ZR_HELPER_
#undef ZR_

}

bool MessageRequestPlaySpeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool normalize = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &normalize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_increase;
        break;
      }

      // optional bool increase = 2;
      case 2: {
        if (tag == 16) {
         parse_increase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &increase_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  return false;
#undef DO_
}

void MessageRequestPlaySpeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  // optional bool normalize = 1;
  if (this->normalize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->normalize(), output);
  }

  // optional bool increase = 2;
  if (this->increase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->increase(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
}

::google::protobuf::uint8* MessageRequestPlaySpeed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  // optional bool normalize = 1;
  if (this->normalize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->normalize(), target);
  }

  // optional bool increase = 2;
  if (this->increase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->increase(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  return target;
}

int MessageRequestPlaySpeed::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  int total_size = 0;

  // optional bool normalize = 1;
  if (this->normalize() != 0) {
    total_size += 1 + 1;
  }

  // optional bool increase = 2;
  if (this->increase() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlaySpeed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlaySpeed* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlaySpeed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
    MergeFrom(*source);
  }
}

void MessageRequestPlaySpeed::MergeFrom(const MessageRequestPlaySpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.normalize() != 0) {
    set_normalize(from.normalize());
  }
  if (from.increase() != 0) {
    set_increase(from.increase());
  }
}

void MessageRequestPlaySpeed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlaySpeed::CopyFrom(const MessageRequestPlaySpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlaySpeed::IsInitialized() const {

  return true;
}

void MessageRequestPlaySpeed::Swap(MessageRequestPlaySpeed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlaySpeed::InternalSwap(MessageRequestPlaySpeed* other) {
  std::swap(normalize_, other->normalize_);
  std::swap(increase_, other->increase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlaySpeed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlaySpeed_descriptor_;
  metadata.reflection = MessageRequestPlaySpeed_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlaySpeed

// optional bool normalize = 1;
void MessageRequestPlaySpeed::clear_normalize() {
  normalize_ = false;
}
 bool MessageRequestPlaySpeed::normalize() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlaySpeed.normalize)
  return normalize_;
}
 void MessageRequestPlaySpeed::set_normalize(bool value) {
  
  normalize_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlaySpeed.normalize)
}

// optional bool increase = 2;
void MessageRequestPlaySpeed::clear_increase() {
  increase_ = false;
}
 bool MessageRequestPlaySpeed::increase() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlaySpeed.increase)
  return increase_;
}
 void MessageRequestPlaySpeed::set_increase(bool value) {
  
  increase_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlaySpeed.increase)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestPlayFromPos::kPositionMillisecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestPlayFromPos::MessageRequestPlayFromPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
}

void MessageRequestPlayFromPos::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestPlayFromPos::MessageRequestPlayFromPos(const MessageRequestPlayFromPos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
}

void MessageRequestPlayFromPos::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  positionmillisec_ = GOOGLE_LONGLONG(0);
}

MessageRequestPlayFromPos::~MessageRequestPlayFromPos() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  SharedDtor();
}

void MessageRequestPlayFromPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestPlayFromPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestPlayFromPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestPlayFromPos_descriptor_;
}

const MessageRequestPlayFromPos& MessageRequestPlayFromPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestPlayFromPos* MessageRequestPlayFromPos::default_instance_ = NULL;

MessageRequestPlayFromPos* MessageRequestPlayFromPos::New(::google::protobuf::Arena* arena) const {
  MessageRequestPlayFromPos* n = new MessageRequestPlayFromPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestPlayFromPos::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  positionmillisec_ = GOOGLE_LONGLONG(0);
}

bool MessageRequestPlayFromPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 positionMillisec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &positionmillisec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  return false;
#undef DO_
}

void MessageRequestPlayFromPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  // optional int64 positionMillisec = 1;
  if (this->positionmillisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->positionmillisec(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
}

::google::protobuf::uint8* MessageRequestPlayFromPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  // optional int64 positionMillisec = 1;
  if (this->positionmillisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->positionmillisec(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  return target;
}

int MessageRequestPlayFromPos::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  int total_size = 0;

  // optional int64 positionMillisec = 1;
  if (this->positionmillisec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->positionmillisec());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestPlayFromPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestPlayFromPos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestPlayFromPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
    MergeFrom(*source);
  }
}

void MessageRequestPlayFromPos::MergeFrom(const MessageRequestPlayFromPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.positionmillisec() != 0) {
    set_positionmillisec(from.positionmillisec());
  }
}

void MessageRequestPlayFromPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestPlayFromPos::CopyFrom(const MessageRequestPlayFromPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestPlayFromPos::IsInitialized() const {

  return true;
}

void MessageRequestPlayFromPos::Swap(MessageRequestPlayFromPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestPlayFromPos::InternalSwap(MessageRequestPlayFromPos* other) {
  std::swap(positionmillisec_, other->positionmillisec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestPlayFromPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestPlayFromPos_descriptor_;
  metadata.reflection = MessageRequestPlayFromPos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestPlayFromPos

// optional int64 positionMillisec = 1;
void MessageRequestPlayFromPos::clear_positionmillisec() {
  positionmillisec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageRequestPlayFromPos::positionmillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayFromPos.positionMillisec)
  return positionmillisec_;
}
 void MessageRequestPlayFromPos::set_positionmillisec(::google::protobuf::int64 value) {
  
  positionmillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayFromPos.positionMillisec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestSetRange::kLeftPlayingRangeMillisecFieldNumber;
const int MessageRequestSetRange::kRightPlayingRangeMillisecFieldNumber;
const int MessageRequestSetRange::kResetRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestSetRange::MessageRequestSetRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageRequestSetRange)
}

void MessageRequestSetRange::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestSetRange::MessageRequestSetRange(const MessageRequestSetRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageRequestSetRange)
}

void MessageRequestSetRange::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  leftplayingrangemillisec_ = GOOGLE_LONGLONG(0);
  rightplayingrangemillisec_ = GOOGLE_LONGLONG(0);
  resetrange_ = false;
}

MessageRequestSetRange::~MessageRequestSetRange() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageRequestSetRange)
  SharedDtor();
}

void MessageRequestSetRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestSetRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestSetRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestSetRange_descriptor_;
}

const MessageRequestSetRange& MessageRequestSetRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageRequestSetRange* MessageRequestSetRange::default_instance_ = NULL;

MessageRequestSetRange* MessageRequestSetRange::New(::google::protobuf::Arena* arena) const {
  MessageRequestSetRange* n = new MessageRequestSetRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestSetRange::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageRequestSetRange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessageRequestSetRange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageRequestSetRange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftplayingrangemillisec_, resetrange_);

#undef ZR_HELPER_
#undef ZR_

}

bool MessageRequestSetRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 leftPlayingRangeMillisec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leftplayingrangemillisec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rightPlayingRangeMillisec;
        break;
      }

      // optional int64 rightPlayingRangeMillisec = 2;
      case 2: {
        if (tag == 16) {
         parse_rightPlayingRangeMillisec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rightplayingrangemillisec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_resetRange;
        break;
      }

      // optional bool resetRange = 3;
      case 3: {
        if (tag == 24) {
         parse_resetRange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &resetrange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageRequestSetRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageRequestSetRange)
  return false;
#undef DO_
}

void MessageRequestSetRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  // optional int64 leftPlayingRangeMillisec = 1;
  if (this->leftplayingrangemillisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->leftplayingrangemillisec(), output);
  }

  // optional int64 rightPlayingRangeMillisec = 2;
  if (this->rightplayingrangemillisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rightplayingrangemillisec(), output);
  }

  // optional bool resetRange = 3;
  if (this->resetrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->resetrange(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageRequestSetRange)
}

::google::protobuf::uint8* MessageRequestSetRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  // optional int64 leftPlayingRangeMillisec = 1;
  if (this->leftplayingrangemillisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->leftplayingrangemillisec(), target);
  }

  // optional int64 rightPlayingRangeMillisec = 2;
  if (this->rightplayingrangemillisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rightplayingrangemillisec(), target);
  }

  // optional bool resetRange = 3;
  if (this->resetrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->resetrange(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageRequestSetRange)
  return target;
}

int MessageRequestSetRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  int total_size = 0;

  // optional int64 leftPlayingRangeMillisec = 1;
  if (this->leftplayingrangemillisec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->leftplayingrangemillisec());
  }

  // optional int64 rightPlayingRangeMillisec = 2;
  if (this->rightplayingrangemillisec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rightplayingrangemillisec());
  }

  // optional bool resetRange = 3;
  if (this->resetrange() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestSetRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageRequestSetRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestSetRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageRequestSetRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageRequestSetRange)
    MergeFrom(*source);
  }
}

void MessageRequestSetRange::MergeFrom(const MessageRequestSetRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.leftplayingrangemillisec() != 0) {
    set_leftplayingrangemillisec(from.leftplayingrangemillisec());
  }
  if (from.rightplayingrangemillisec() != 0) {
    set_rightplayingrangemillisec(from.rightplayingrangemillisec());
  }
  if (from.resetrange() != 0) {
    set_resetrange(from.resetrange());
  }
}

void MessageRequestSetRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestSetRange::CopyFrom(const MessageRequestSetRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageRequestSetRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestSetRange::IsInitialized() const {

  return true;
}

void MessageRequestSetRange::Swap(MessageRequestSetRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestSetRange::InternalSwap(MessageRequestSetRange* other) {
  std::swap(leftplayingrangemillisec_, other->leftplayingrangemillisec_);
  std::swap(rightplayingrangemillisec_, other->rightplayingrangemillisec_);
  std::swap(resetrange_, other->resetrange_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestSetRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestSetRange_descriptor_;
  metadata.reflection = MessageRequestSetRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestSetRange

// optional int64 leftPlayingRangeMillisec = 1;
void MessageRequestSetRange::clear_leftplayingrangemillisec() {
  leftplayingrangemillisec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageRequestSetRange::leftplayingrangemillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.leftPlayingRangeMillisec)
  return leftplayingrangemillisec_;
}
 void MessageRequestSetRange::set_leftplayingrangemillisec(::google::protobuf::int64 value) {
  
  leftplayingrangemillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.leftPlayingRangeMillisec)
}

// optional int64 rightPlayingRangeMillisec = 2;
void MessageRequestSetRange::clear_rightplayingrangemillisec() {
  rightplayingrangemillisec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageRequestSetRange::rightplayingrangemillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.rightPlayingRangeMillisec)
  return rightplayingrangemillisec_;
}
 void MessageRequestSetRange::set_rightplayingrangemillisec(::google::protobuf::int64 value) {
  
  rightplayingrangemillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.rightPlayingRangeMillisec)
}

// optional bool resetRange = 3;
void MessageRequestSetRange::clear_resetrange() {
  resetrange_ = false;
}
 bool MessageRequestSetRange::resetrange() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.resetRange)
  return resetrange_;
}
 void MessageRequestSetRange::set_resetrange(bool value) {
  
  resetrange_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.resetRange)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageResponsePlayerDestroy::MessageResponsePlayerDestroy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
}

void MessageResponsePlayerDestroy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageResponsePlayerDestroy::MessageResponsePlayerDestroy(const MessageResponsePlayerDestroy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
}

void MessageResponsePlayerDestroy::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageResponsePlayerDestroy::~MessageResponsePlayerDestroy() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  SharedDtor();
}

void MessageResponsePlayerDestroy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageResponsePlayerDestroy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageResponsePlayerDestroy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageResponsePlayerDestroy_descriptor_;
}

const MessageResponsePlayerDestroy& MessageResponsePlayerDestroy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageResponsePlayerDestroy* MessageResponsePlayerDestroy::default_instance_ = NULL;

MessageResponsePlayerDestroy* MessageResponsePlayerDestroy::New(::google::protobuf::Arena* arena) const {
  MessageResponsePlayerDestroy* n = new MessageResponsePlayerDestroy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageResponsePlayerDestroy::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
}

bool MessageResponsePlayerDestroy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  return false;
#undef DO_
}

void MessageResponsePlayerDestroy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
}

::google::protobuf::uint8* MessageResponsePlayerDestroy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  return target;
}

int MessageResponsePlayerDestroy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageResponsePlayerDestroy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageResponsePlayerDestroy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageResponsePlayerDestroy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
    MergeFrom(*source);
  }
}

void MessageResponsePlayerDestroy::MergeFrom(const MessageResponsePlayerDestroy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageResponsePlayerDestroy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageResponsePlayerDestroy::CopyFrom(const MessageResponsePlayerDestroy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageResponsePlayerDestroy::IsInitialized() const {

  return true;
}

void MessageResponsePlayerDestroy::Swap(MessageResponsePlayerDestroy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageResponsePlayerDestroy::InternalSwap(MessageResponsePlayerDestroy* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageResponsePlayerDestroy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageResponsePlayerDestroy_descriptor_;
  metadata.reflection = MessageResponsePlayerDestroy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponsePlayerDestroy

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePlayerController::kHeaderFieldNumber;
const int MessagePlayerController::kMsgPlayStartFieldNumber;
const int MessagePlayerController::kMsgPlayStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePlayerController::MessagePlayerController()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessagePlayerController)
}

void MessagePlayerController::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::protocol_player_agent_to_controller::MessageHeader*>(&::protocol_player_agent_to_controller::MessageHeader::default_instance());
  msg_play_start_ = const_cast< ::protocol_player_agent_to_controller::MessageResponsePlayStart*>(&::protocol_player_agent_to_controller::MessageResponsePlayStart::default_instance());
  msg_play_stop_ = const_cast< ::protocol_player_agent_to_controller::MessageResponsePlayStop*>(&::protocol_player_agent_to_controller::MessageResponsePlayStop::default_instance());
}

MessagePlayerController::MessagePlayerController(const MessagePlayerController& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessagePlayerController)
}

void MessagePlayerController::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
  msg_play_start_ = NULL;
  msg_play_stop_ = NULL;
}

MessagePlayerController::~MessagePlayerController() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessagePlayerController)
  SharedDtor();
}

void MessagePlayerController::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete msg_play_start_;
    delete msg_play_stop_;
  }
}

void MessagePlayerController::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePlayerController::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessagePlayerController_descriptor_;
}

const MessagePlayerController& MessagePlayerController::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessagePlayerController* MessagePlayerController::default_instance_ = NULL;

MessagePlayerController* MessagePlayerController::New(::google::protobuf::Arena* arena) const {
  MessagePlayerController* n = new MessagePlayerController;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagePlayerController::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessagePlayerController)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
}

bool MessagePlayerController::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessagePlayerController)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg_play_start;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
      case 2: {
        if (tag == 18) {
         parse_msg_play_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_start()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg_play_stop;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
      case 3: {
        if (tag == 26) {
         parse_msg_play_stop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_play_stop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessagePlayerController)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessagePlayerController)
  return false;
#undef DO_
}

void MessagePlayerController::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessagePlayerController)
  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
  if (this->has_msg_play_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_play_start_, output);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
  if (this->has_msg_play_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_play_stop_, output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessagePlayerController)
}

::google::protobuf::uint8* MessagePlayerController::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessagePlayerController)
  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
  if (this->has_msg_play_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_play_start_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
  if (this->has_msg_play_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->msg_play_stop_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessagePlayerController)
  return target;
}

int MessagePlayerController::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessagePlayerController)
  int total_size = 0;

  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
  if (this->has_msg_play_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_start_);
  }

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
  if (this->has_msg_play_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_play_stop_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePlayerController::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessagePlayerController)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessagePlayerController* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePlayerController>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessagePlayerController)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessagePlayerController)
    MergeFrom(*source);
  }
}

void MessagePlayerController::MergeFrom(const MessagePlayerController& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessagePlayerController)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_header()) {
    mutable_header()->::protocol_player_agent_to_controller::MessageHeader::MergeFrom(from.header());
  }
  if (from.has_msg_play_start()) {
    mutable_msg_play_start()->::protocol_player_agent_to_controller::MessageResponsePlayStart::MergeFrom(from.msg_play_start());
  }
  if (from.has_msg_play_stop()) {
    mutable_msg_play_stop()->::protocol_player_agent_to_controller::MessageResponsePlayStop::MergeFrom(from.msg_play_stop());
  }
}

void MessagePlayerController::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessagePlayerController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePlayerController::CopyFrom(const MessagePlayerController& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessagePlayerController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePlayerController::IsInitialized() const {

  return true;
}

void MessagePlayerController::Swap(MessagePlayerController* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePlayerController::InternalSwap(MessagePlayerController* other) {
  std::swap(header_, other->header_);
  std::swap(msg_play_start_, other->msg_play_start_);
  std::swap(msg_play_stop_, other->msg_play_stop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessagePlayerController::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessagePlayerController_descriptor_;
  metadata.reflection = MessagePlayerController_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessagePlayerController

// optional .protocol_player_agent_to_controller.MessageHeader header = 1;
bool MessagePlayerController::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void MessagePlayerController::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageHeader& MessagePlayerController::header() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::protocol_player_agent_to_controller::MessageHeader* MessagePlayerController::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol_player_agent_to_controller::MessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.header)
  return header_;
}
::protocol_player_agent_to_controller::MessageHeader* MessagePlayerController::release_header() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.header)
  
  ::protocol_player_agent_to_controller::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void MessagePlayerController::set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.header)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
bool MessagePlayerController::has_msg_play_start() const {
  return !_is_default_instance_ && msg_play_start_ != NULL;
}
void MessagePlayerController::clear_msg_play_start() {
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageResponsePlayStart& MessagePlayerController::msg_play_start() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  return msg_play_start_ != NULL ? *msg_play_start_ : *default_instance_->msg_play_start_;
}
::protocol_player_agent_to_controller::MessageResponsePlayStart* MessagePlayerController::mutable_msg_play_start() {
  
  if (msg_play_start_ == NULL) {
    msg_play_start_ = new ::protocol_player_agent_to_controller::MessageResponsePlayStart;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  return msg_play_start_;
}
::protocol_player_agent_to_controller::MessageResponsePlayStart* MessagePlayerController::release_msg_play_start() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayStart* temp = msg_play_start_;
  msg_play_start_ = NULL;
  return temp;
}
void MessagePlayerController::set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageResponsePlayStart* msg_play_start) {
  delete msg_play_start_;
  msg_play_start_ = msg_play_start;
  if (msg_play_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
bool MessagePlayerController::has_msg_play_stop() const {
  return !_is_default_instance_ && msg_play_stop_ != NULL;
}
void MessagePlayerController::clear_msg_play_stop() {
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
}
const ::protocol_player_agent_to_controller::MessageResponsePlayStop& MessagePlayerController::msg_play_stop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  return msg_play_stop_ != NULL ? *msg_play_stop_ : *default_instance_->msg_play_stop_;
}
::protocol_player_agent_to_controller::MessageResponsePlayStop* MessagePlayerController::mutable_msg_play_stop() {
  
  if (msg_play_stop_ == NULL) {
    msg_play_stop_ = new ::protocol_player_agent_to_controller::MessageResponsePlayStop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  return msg_play_stop_;
}
::protocol_player_agent_to_controller::MessageResponsePlayStop* MessagePlayerController::release_msg_play_stop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayStop* temp = msg_play_stop_;
  msg_play_stop_ = NULL;
  return temp;
}
void MessagePlayerController::set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageResponsePlayStop* msg_play_stop) {
  delete msg_play_stop_;
  msg_play_stop_ = msg_play_stop;
  if (msg_play_stop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageResponsePlayStart::MessageResponsePlayStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageResponsePlayStart)
}

void MessageResponsePlayStart::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageResponsePlayStart::MessageResponsePlayStart(const MessageResponsePlayStart& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageResponsePlayStart)
}

void MessageResponsePlayStart::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageResponsePlayStart::~MessageResponsePlayStart() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageResponsePlayStart)
  SharedDtor();
}

void MessageResponsePlayStart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageResponsePlayStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageResponsePlayStart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageResponsePlayStart_descriptor_;
}

const MessageResponsePlayStart& MessageResponsePlayStart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageResponsePlayStart* MessageResponsePlayStart::default_instance_ = NULL;

MessageResponsePlayStart* MessageResponsePlayStart::New(::google::protobuf::Arena* arena) const {
  MessageResponsePlayStart* n = new MessageResponsePlayStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageResponsePlayStart::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
}

bool MessageResponsePlayStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageResponsePlayStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageResponsePlayStart)
  return false;
#undef DO_
}

void MessageResponsePlayStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageResponsePlayStart)
}

::google::protobuf::uint8* MessageResponsePlayStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageResponsePlayStart)
  return target;
}

int MessageResponsePlayStart::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageResponsePlayStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageResponsePlayStart* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageResponsePlayStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageResponsePlayStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageResponsePlayStart)
    MergeFrom(*source);
  }
}

void MessageResponsePlayStart::MergeFrom(const MessageResponsePlayStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageResponsePlayStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageResponsePlayStart::CopyFrom(const MessageResponsePlayStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageResponsePlayStart::IsInitialized() const {

  return true;
}

void MessageResponsePlayStart::Swap(MessageResponsePlayStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageResponsePlayStart::InternalSwap(MessageResponsePlayStart* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageResponsePlayStart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageResponsePlayStart_descriptor_;
  metadata.reflection = MessageResponsePlayStart_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponsePlayStart

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageResponsePlayStop::MessageResponsePlayStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.MessageResponsePlayStop)
}

void MessageResponsePlayStop::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageResponsePlayStop::MessageResponsePlayStop(const MessageResponsePlayStop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.MessageResponsePlayStop)
}

void MessageResponsePlayStop::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageResponsePlayStop::~MessageResponsePlayStop() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.MessageResponsePlayStop)
  SharedDtor();
}

void MessageResponsePlayStop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageResponsePlayStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageResponsePlayStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageResponsePlayStop_descriptor_;
}

const MessageResponsePlayStop& MessageResponsePlayStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

MessageResponsePlayStop* MessageResponsePlayStop::default_instance_ = NULL;

MessageResponsePlayStop* MessageResponsePlayStop::New(::google::protobuf::Arena* arena) const {
  MessageResponsePlayStop* n = new MessageResponsePlayStop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageResponsePlayStop::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
}

bool MessageResponsePlayStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.MessageResponsePlayStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.MessageResponsePlayStop)
  return false;
#undef DO_
}

void MessageResponsePlayStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.MessageResponsePlayStop)
}

::google::protobuf::uint8* MessageResponsePlayStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.MessageResponsePlayStop)
  return target;
}

int MessageResponsePlayStop::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageResponsePlayStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageResponsePlayStop* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageResponsePlayStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.MessageResponsePlayStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.MessageResponsePlayStop)
    MergeFrom(*source);
  }
}

void MessageResponsePlayStop::MergeFrom(const MessageResponsePlayStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageResponsePlayStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageResponsePlayStop::CopyFrom(const MessageResponsePlayStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.MessageResponsePlayStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageResponsePlayStop::IsInitialized() const {

  return true;
}

void MessageResponsePlayStop::Swap(MessageResponsePlayStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageResponsePlayStop::InternalSwap(MessageResponsePlayStop* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageResponsePlayStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageResponsePlayStop_descriptor_;
  metadata.reflection = MessageResponsePlayStop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponsePlayStop

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufPlayerAgentToController::kSenderFieldNumber;
const int ProtobufPlayerAgentToController::kMsgPlayerAgentFieldNumber;
const int ProtobufPlayerAgentToController::kMsgPlayerControllerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufPlayerAgentToController::ProtobufPlayerAgentToController()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
}

void ProtobufPlayerAgentToController::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_player_agent_ = const_cast< ::protocol_player_agent_to_controller::MessagePlayerAgent*>(&::protocol_player_agent_to_controller::MessagePlayerAgent::default_instance());
  msg_player_controller_ = const_cast< ::protocol_player_agent_to_controller::MessagePlayerController*>(&::protocol_player_agent_to_controller::MessagePlayerController::default_instance());
}

ProtobufPlayerAgentToController::ProtobufPlayerAgentToController(const ProtobufPlayerAgentToController& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
}

void ProtobufPlayerAgentToController::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sender_ = 0;
  msg_player_agent_ = NULL;
  msg_player_controller_ = NULL;
}

ProtobufPlayerAgentToController::~ProtobufPlayerAgentToController() {
  // @@protoc_insertion_point(destructor:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  SharedDtor();
}

void ProtobufPlayerAgentToController::SharedDtor() {
  if (this != default_instance_) {
    delete msg_player_agent_;
    delete msg_player_controller_;
  }
}

void ProtobufPlayerAgentToController::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtobufPlayerAgentToController::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtobufPlayerAgentToController_descriptor_;
}

const ProtobufPlayerAgentToController& ProtobufPlayerAgentToController::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  return *default_instance_;
}

ProtobufPlayerAgentToController* ProtobufPlayerAgentToController::default_instance_ = NULL;

ProtobufPlayerAgentToController* ProtobufPlayerAgentToController::New(::google::protobuf::Arena* arena) const {
  ProtobufPlayerAgentToController* n = new ProtobufPlayerAgentToController;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtobufPlayerAgentToController::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  sender_ = 0;
  if (GetArenaNoVirtual() == NULL && msg_player_agent_ != NULL) delete msg_player_agent_;
  msg_player_agent_ = NULL;
  if (GetArenaNoVirtual() == NULL && msg_player_controller_ != NULL) delete msg_player_controller_;
  msg_player_controller_ = NULL;
}

bool ProtobufPlayerAgentToController::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protocol_player_agent_to_controller.EWho sender = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sender(static_cast< ::protocol_player_agent_to_controller::EWho >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg_player_agent;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
      case 2: {
        if (tag == 18) {
         parse_msg_player_agent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_player_agent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg_player_controller;
        break;
      }

      // optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
      case 3: {
        if (tag == 26) {
         parse_msg_player_controller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_player_controller()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  return false;
#undef DO_
}

void ProtobufPlayerAgentToController::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  // optional .protocol_player_agent_to_controller.EWho sender = 1;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sender(), output);
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
  if (this->has_msg_player_agent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_player_agent_, output);
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
  if (this->has_msg_player_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_player_controller_, output);
  }

  // @@protoc_insertion_point(serialize_end:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
}

::google::protobuf::uint8* ProtobufPlayerAgentToController::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  // optional .protocol_player_agent_to_controller.EWho sender = 1;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sender(), target);
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
  if (this->has_msg_player_agent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_player_agent_, false, target);
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
  if (this->has_msg_player_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->msg_player_controller_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  return target;
}

int ProtobufPlayerAgentToController::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  int total_size = 0;

  // optional .protocol_player_agent_to_controller.EWho sender = 1;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender());
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
  if (this->has_msg_player_agent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_player_agent_);
  }

  // optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
  if (this->has_msg_player_controller()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_player_controller_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtobufPlayerAgentToController::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProtobufPlayerAgentToController* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufPlayerAgentToController>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
    MergeFrom(*source);
  }
}

void ProtobufPlayerAgentToController::MergeFrom(const ProtobufPlayerAgentToController& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.has_msg_player_agent()) {
    mutable_msg_player_agent()->::protocol_player_agent_to_controller::MessagePlayerAgent::MergeFrom(from.msg_player_agent());
  }
  if (from.has_msg_player_controller()) {
    mutable_msg_player_controller()->::protocol_player_agent_to_controller::MessagePlayerController::MergeFrom(from.msg_player_controller());
  }
}

void ProtobufPlayerAgentToController::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufPlayerAgentToController::CopyFrom(const ProtobufPlayerAgentToController& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufPlayerAgentToController::IsInitialized() const {

  return true;
}

void ProtobufPlayerAgentToController::Swap(ProtobufPlayerAgentToController* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufPlayerAgentToController::InternalSwap(ProtobufPlayerAgentToController* other) {
  std::swap(sender_, other->sender_);
  std::swap(msg_player_agent_, other->msg_player_agent_);
  std::swap(msg_player_controller_, other->msg_player_controller_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtobufPlayerAgentToController::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtobufPlayerAgentToController_descriptor_;
  metadata.reflection = ProtobufPlayerAgentToController_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtobufPlayerAgentToController

// optional .protocol_player_agent_to_controller.EWho sender = 1;
void ProtobufPlayerAgentToController::clear_sender() {
  sender_ = 0;
}
 ::protocol_player_agent_to_controller::EWho ProtobufPlayerAgentToController::sender() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.sender)
  return static_cast< ::protocol_player_agent_to_controller::EWho >(sender_);
}
 void ProtobufPlayerAgentToController::set_sender(::protocol_player_agent_to_controller::EWho value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.sender)
}

// optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
bool ProtobufPlayerAgentToController::has_msg_player_agent() const {
  return !_is_default_instance_ && msg_player_agent_ != NULL;
}
void ProtobufPlayerAgentToController::clear_msg_player_agent() {
  if (GetArenaNoVirtual() == NULL && msg_player_agent_ != NULL) delete msg_player_agent_;
  msg_player_agent_ = NULL;
}
const ::protocol_player_agent_to_controller::MessagePlayerAgent& ProtobufPlayerAgentToController::msg_player_agent() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  return msg_player_agent_ != NULL ? *msg_player_agent_ : *default_instance_->msg_player_agent_;
}
::protocol_player_agent_to_controller::MessagePlayerAgent* ProtobufPlayerAgentToController::mutable_msg_player_agent() {
  
  if (msg_player_agent_ == NULL) {
    msg_player_agent_ = new ::protocol_player_agent_to_controller::MessagePlayerAgent;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  return msg_player_agent_;
}
::protocol_player_agent_to_controller::MessagePlayerAgent* ProtobufPlayerAgentToController::release_msg_player_agent() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  
  ::protocol_player_agent_to_controller::MessagePlayerAgent* temp = msg_player_agent_;
  msg_player_agent_ = NULL;
  return temp;
}
void ProtobufPlayerAgentToController::set_allocated_msg_player_agent(::protocol_player_agent_to_controller::MessagePlayerAgent* msg_player_agent) {
  delete msg_player_agent_;
  msg_player_agent_ = msg_player_agent;
  if (msg_player_agent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
}

// optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
bool ProtobufPlayerAgentToController::has_msg_player_controller() const {
  return !_is_default_instance_ && msg_player_controller_ != NULL;
}
void ProtobufPlayerAgentToController::clear_msg_player_controller() {
  if (GetArenaNoVirtual() == NULL && msg_player_controller_ != NULL) delete msg_player_controller_;
  msg_player_controller_ = NULL;
}
const ::protocol_player_agent_to_controller::MessagePlayerController& ProtobufPlayerAgentToController::msg_player_controller() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  return msg_player_controller_ != NULL ? *msg_player_controller_ : *default_instance_->msg_player_controller_;
}
::protocol_player_agent_to_controller::MessagePlayerController* ProtobufPlayerAgentToController::mutable_msg_player_controller() {
  
  if (msg_player_controller_ == NULL) {
    msg_player_controller_ = new ::protocol_player_agent_to_controller::MessagePlayerController;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  return msg_player_controller_;
}
::protocol_player_agent_to_controller::MessagePlayerController* ProtobufPlayerAgentToController::release_msg_player_controller() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  
  ::protocol_player_agent_to_controller::MessagePlayerController* temp = msg_player_controller_;
  msg_player_controller_ = NULL;
  return temp;
}
void ProtobufPlayerAgentToController::set_allocated_msg_player_controller(::protocol_player_agent_to_controller::MessagePlayerController* msg_player_controller) {
  delete msg_player_controller_;
  msg_player_controller_ = msg_player_controller;
  if (msg_player_controller) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol_player_agent_to_controller

// @@protoc_insertion_point(global_scope)
