// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol_player_agent_to_controller.proto

#ifndef PROTOBUF_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto__INCLUDED
#define PROTOBUF_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol_player_agent_to_controller {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

class MessageHeader;
class MessagePlayerAgent;
class MessagePlayerController;
class MessageRequestPlayFromPos;
class MessageRequestPlayLoop;
class MessageRequestPlayPause;
class MessageRequestPlayReverse;
class MessageRequestPlaySpeed;
class MessageRequestPlayStart;
class MessageRequestPlayStep;
class MessageRequestPlayStop;
class MessageRequestSetRange;
class MessageResponsePlayStart;
class MessageResponsePlayStop;
class MessageResponsePlayerDestroy;
class ProtobufPlayerAgentToController;

enum EPlayerAgentCommandType {
  PACT_PLAY_START = 0,
  PACT_PLAY_PAUSE = 1,
  PACT_PLAY_STOP = 2,
  PACT_PLAY_STEP = 3,
  PACT_PLAY_LOOP = 4,
  PACT_PLAY_REVERSE = 5,
  PACT_PLAY_SPEED = 6,
  PACT_PLAY_FROM_POS = 7,
  PACT_SET_RANGE = 8,
  PACT_PLAYER_DESTROY = 9,
  PACT_UNDEFINED = 99,
  EPlayerAgentCommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EPlayerAgentCommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EPlayerAgentCommandType_IsValid(int value);
const EPlayerAgentCommandType EPlayerAgentCommandType_MIN = PACT_PLAY_START;
const EPlayerAgentCommandType EPlayerAgentCommandType_MAX = PACT_UNDEFINED;
const int EPlayerAgentCommandType_ARRAYSIZE = EPlayerAgentCommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPlayerAgentCommandType_descriptor();
inline const ::std::string& EPlayerAgentCommandType_Name(EPlayerAgentCommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPlayerAgentCommandType_descriptor(), value);
}
inline bool EPlayerAgentCommandType_Parse(
    const ::std::string& name, EPlayerAgentCommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPlayerAgentCommandType>(
    EPlayerAgentCommandType_descriptor(), name, value);
}
enum EPlayerControllerCommandType {
  PCCT_PING = 0,
  PCCT_UNDEFINED = 99,
  EPlayerControllerCommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EPlayerControllerCommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EPlayerControllerCommandType_IsValid(int value);
const EPlayerControllerCommandType EPlayerControllerCommandType_MIN = PCCT_PING;
const EPlayerControllerCommandType EPlayerControllerCommandType_MAX = PCCT_UNDEFINED;
const int EPlayerControllerCommandType_ARRAYSIZE = EPlayerControllerCommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPlayerControllerCommandType_descriptor();
inline const ::std::string& EPlayerControllerCommandType_Name(EPlayerControllerCommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPlayerControllerCommandType_descriptor(), value);
}
inline bool EPlayerControllerCommandType_Parse(
    const ::std::string& name, EPlayerControllerCommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPlayerControllerCommandType>(
    EPlayerControllerCommandType_descriptor(), name, value);
}
enum EWho {
  W_PLAYER_AGENT = 0,
  W_PLAYER_CONTROLLER = 1,
  W_UNDEFINED = 2,
  EWho_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EWho_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EWho_IsValid(int value);
const EWho EWho_MIN = W_PLAYER_AGENT;
const EWho EWho_MAX = W_UNDEFINED;
const int EWho_ARRAYSIZE = EWho_MAX + 1;

const ::google::protobuf::EnumDescriptor* EWho_descriptor();
inline const ::std::string& EWho_Name(EWho value) {
  return ::google::protobuf::internal::NameOfEnum(
    EWho_descriptor(), value);
}
inline bool EWho_Parse(
    const ::std::string& name, EWho* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EWho>(
    EWho_descriptor(), name, value);
}
// ===================================================================

class MessageHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageHeader) */ {
 public:
  MessageHeader();
  virtual ~MessageHeader();

  MessageHeader(const MessageHeader& from);

  inline MessageHeader& operator=(const MessageHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageHeader& default_instance();

  void Swap(MessageHeader* other);

  // implements Message ----------------------------------------------

  inline MessageHeader* New() const { return New(NULL); }

  MessageHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageHeader& from);
  void MergeFrom(const MessageHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string module_name = 1;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 1;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // optional string last_error = 2;
  void clear_last_error();
  static const int kLastErrorFieldNumber = 2;
  const ::std::string& last_error() const;
  void set_last_error(const ::std::string& value);
  void set_last_error(const char* value);
  void set_last_error(const char* value, size_t size);
  ::std::string* mutable_last_error();
  ::std::string* release_last_error();
  void set_allocated_last_error(::std::string* last_error);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr last_error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageHeader* default_instance_;
};
// -------------------------------------------------------------------

class MessagePlayerAgent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessagePlayerAgent) */ {
 public:
  MessagePlayerAgent();
  virtual ~MessagePlayerAgent();

  MessagePlayerAgent(const MessagePlayerAgent& from);

  inline MessagePlayerAgent& operator=(const MessagePlayerAgent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessagePlayerAgent& default_instance();

  void Swap(MessagePlayerAgent* other);

  // implements Message ----------------------------------------------

  inline MessagePlayerAgent* New() const { return New(NULL); }

  MessagePlayerAgent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessagePlayerAgent& from);
  void MergeFrom(const MessagePlayerAgent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessagePlayerAgent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::protocol_player_agent_to_controller::MessageHeader& header() const;
  ::protocol_player_agent_to_controller::MessageHeader* mutable_header();
  ::protocol_player_agent_to_controller::MessageHeader* release_header();
  void set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header);

  // optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 2;
  ::protocol_player_agent_to_controller::EPlayerAgentCommandType cmd_type() const;
  void set_cmd_type(::protocol_player_agent_to_controller::EPlayerAgentCommandType value);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
  bool has_msg_play_start() const;
  void clear_msg_play_start();
  static const int kMsgPlayStartFieldNumber = 3;
  const ::protocol_player_agent_to_controller::MessageRequestPlayStart& msg_play_start() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayStart* mutable_msg_play_start();
  ::protocol_player_agent_to_controller::MessageRequestPlayStart* release_msg_play_start();
  void set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageRequestPlayStart* msg_play_start);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
  bool has_msg_play_pause() const;
  void clear_msg_play_pause();
  static const int kMsgPlayPauseFieldNumber = 4;
  const ::protocol_player_agent_to_controller::MessageRequestPlayPause& msg_play_pause() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayPause* mutable_msg_play_pause();
  ::protocol_player_agent_to_controller::MessageRequestPlayPause* release_msg_play_pause();
  void set_allocated_msg_play_pause(::protocol_player_agent_to_controller::MessageRequestPlayPause* msg_play_pause);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
  bool has_msg_play_stop() const;
  void clear_msg_play_stop();
  static const int kMsgPlayStopFieldNumber = 5;
  const ::protocol_player_agent_to_controller::MessageRequestPlayStop& msg_play_stop() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayStop* mutable_msg_play_stop();
  ::protocol_player_agent_to_controller::MessageRequestPlayStop* release_msg_play_stop();
  void set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageRequestPlayStop* msg_play_stop);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
  bool has_msg_play_step() const;
  void clear_msg_play_step();
  static const int kMsgPlayStepFieldNumber = 6;
  const ::protocol_player_agent_to_controller::MessageRequestPlayStep& msg_play_step() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayStep* mutable_msg_play_step();
  ::protocol_player_agent_to_controller::MessageRequestPlayStep* release_msg_play_step();
  void set_allocated_msg_play_step(::protocol_player_agent_to_controller::MessageRequestPlayStep* msg_play_step);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
  bool has_msg_play_loop() const;
  void clear_msg_play_loop();
  static const int kMsgPlayLoopFieldNumber = 7;
  const ::protocol_player_agent_to_controller::MessageRequestPlayLoop& msg_play_loop() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayLoop* mutable_msg_play_loop();
  ::protocol_player_agent_to_controller::MessageRequestPlayLoop* release_msg_play_loop();
  void set_allocated_msg_play_loop(::protocol_player_agent_to_controller::MessageRequestPlayLoop* msg_play_loop);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
  bool has_msg_play_reverse() const;
  void clear_msg_play_reverse();
  static const int kMsgPlayReverseFieldNumber = 8;
  const ::protocol_player_agent_to_controller::MessageRequestPlayReverse& msg_play_reverse() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayReverse* mutable_msg_play_reverse();
  ::protocol_player_agent_to_controller::MessageRequestPlayReverse* release_msg_play_reverse();
  void set_allocated_msg_play_reverse(::protocol_player_agent_to_controller::MessageRequestPlayReverse* msg_play_reverse);

  // optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
  bool has_msg_play_speed() const;
  void clear_msg_play_speed();
  static const int kMsgPlaySpeedFieldNumber = 9;
  const ::protocol_player_agent_to_controller::MessageRequestPlaySpeed& msg_play_speed() const;
  ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* mutable_msg_play_speed();
  ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* release_msg_play_speed();
  void set_allocated_msg_play_speed(::protocol_player_agent_to_controller::MessageRequestPlaySpeed* msg_play_speed);

  // optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
  bool has_msg_play_from_pos() const;
  void clear_msg_play_from_pos();
  static const int kMsgPlayFromPosFieldNumber = 10;
  const ::protocol_player_agent_to_controller::MessageRequestPlayFromPos& msg_play_from_pos() const;
  ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* mutable_msg_play_from_pos();
  ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* release_msg_play_from_pos();
  void set_allocated_msg_play_from_pos(::protocol_player_agent_to_controller::MessageRequestPlayFromPos* msg_play_from_pos);

  // optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
  bool has_msg_set_range() const;
  void clear_msg_set_range();
  static const int kMsgSetRangeFieldNumber = 11;
  const ::protocol_player_agent_to_controller::MessageRequestSetRange& msg_set_range() const;
  ::protocol_player_agent_to_controller::MessageRequestSetRange* mutable_msg_set_range();
  ::protocol_player_agent_to_controller::MessageRequestSetRange* release_msg_set_range();
  void set_allocated_msg_set_range(::protocol_player_agent_to_controller::MessageRequestSetRange* msg_set_range);

  // optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
  bool has_msg_player_destroy() const;
  void clear_msg_player_destroy();
  static const int kMsgPlayerDestroyFieldNumber = 12;
  const ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy& msg_player_destroy() const;
  ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* mutable_msg_player_destroy();
  ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* release_msg_player_destroy();
  void set_allocated_msg_player_destroy(::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* msg_player_destroy);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessagePlayerAgent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::protocol_player_agent_to_controller::MessageHeader* header_;
  ::protocol_player_agent_to_controller::MessageRequestPlayStart* msg_play_start_;
  ::protocol_player_agent_to_controller::MessageRequestPlayPause* msg_play_pause_;
  ::protocol_player_agent_to_controller::MessageRequestPlayStop* msg_play_stop_;
  ::protocol_player_agent_to_controller::MessageRequestPlayStep* msg_play_step_;
  ::protocol_player_agent_to_controller::MessageRequestPlayLoop* msg_play_loop_;
  ::protocol_player_agent_to_controller::MessageRequestPlayReverse* msg_play_reverse_;
  ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* msg_play_speed_;
  ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* msg_play_from_pos_;
  ::protocol_player_agent_to_controller::MessageRequestSetRange* msg_set_range_;
  ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* msg_player_destroy_;
  int cmd_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessagePlayerAgent* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayStart) */ {
 public:
  MessageRequestPlayStart();
  virtual ~MessageRequestPlayStart();

  MessageRequestPlayStart(const MessageRequestPlayStart& from);

  inline MessageRequestPlayStart& operator=(const MessageRequestPlayStart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayStart& default_instance();

  void Swap(MessageRequestPlayStart* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayStart* New() const { return New(NULL); }

  MessageRequestPlayStart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayStart& from);
  void MergeFrom(const MessageRequestPlayStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayStart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayStart* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayPause : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayPause) */ {
 public:
  MessageRequestPlayPause();
  virtual ~MessageRequestPlayPause();

  MessageRequestPlayPause(const MessageRequestPlayPause& from);

  inline MessageRequestPlayPause& operator=(const MessageRequestPlayPause& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayPause& default_instance();

  void Swap(MessageRequestPlayPause* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayPause* New() const { return New(NULL); }

  MessageRequestPlayPause* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayPause& from);
  void MergeFrom(const MessageRequestPlayPause& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayPause* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayPause)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayPause* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayStop) */ {
 public:
  MessageRequestPlayStop();
  virtual ~MessageRequestPlayStop();

  MessageRequestPlayStop(const MessageRequestPlayStop& from);

  inline MessageRequestPlayStop& operator=(const MessageRequestPlayStop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayStop& default_instance();

  void Swap(MessageRequestPlayStop* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayStop* New() const { return New(NULL); }

  MessageRequestPlayStop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayStop& from);
  void MergeFrom(const MessageRequestPlayStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayStop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayStop* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayStep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayStep) */ {
 public:
  MessageRequestPlayStep();
  virtual ~MessageRequestPlayStep();

  MessageRequestPlayStep(const MessageRequestPlayStep& from);

  inline MessageRequestPlayStep& operator=(const MessageRequestPlayStep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayStep& default_instance();

  void Swap(MessageRequestPlayStep* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayStep* New() const { return New(NULL); }

  MessageRequestPlayStep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayStep& from);
  void MergeFrom(const MessageRequestPlayStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool forward = 1;
  void clear_forward();
  static const int kForwardFieldNumber = 1;
  bool forward() const;
  void set_forward(bool value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayStep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool forward_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayStep* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayLoop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayLoop) */ {
 public:
  MessageRequestPlayLoop();
  virtual ~MessageRequestPlayLoop();

  MessageRequestPlayLoop(const MessageRequestPlayLoop& from);

  inline MessageRequestPlayLoop& operator=(const MessageRequestPlayLoop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayLoop& default_instance();

  void Swap(MessageRequestPlayLoop* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayLoop* New() const { return New(NULL); }

  MessageRequestPlayLoop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayLoop& from);
  void MergeFrom(const MessageRequestPlayLoop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayLoop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool loop = 1;
  void clear_loop();
  static const int kLoopFieldNumber = 1;
  bool loop() const;
  void set_loop(bool value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayLoop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool loop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayLoop* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayReverse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayReverse) */ {
 public:
  MessageRequestPlayReverse();
  virtual ~MessageRequestPlayReverse();

  MessageRequestPlayReverse(const MessageRequestPlayReverse& from);

  inline MessageRequestPlayReverse& operator=(const MessageRequestPlayReverse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayReverse& default_instance();

  void Swap(MessageRequestPlayReverse* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayReverse* New() const { return New(NULL); }

  MessageRequestPlayReverse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayReverse& from);
  void MergeFrom(const MessageRequestPlayReverse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayReverse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reverse = 1;
  void clear_reverse();
  static const int kReverseFieldNumber = 1;
  bool reverse() const;
  void set_reverse(bool value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayReverse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool reverse_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayReverse* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlaySpeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlaySpeed) */ {
 public:
  MessageRequestPlaySpeed();
  virtual ~MessageRequestPlaySpeed();

  MessageRequestPlaySpeed(const MessageRequestPlaySpeed& from);

  inline MessageRequestPlaySpeed& operator=(const MessageRequestPlaySpeed& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlaySpeed& default_instance();

  void Swap(MessageRequestPlaySpeed* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlaySpeed* New() const { return New(NULL); }

  MessageRequestPlaySpeed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlaySpeed& from);
  void MergeFrom(const MessageRequestPlaySpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlaySpeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool normalize = 1;
  void clear_normalize();
  static const int kNormalizeFieldNumber = 1;
  bool normalize() const;
  void set_normalize(bool value);

  // optional bool increase = 2;
  void clear_increase();
  static const int kIncreaseFieldNumber = 2;
  bool increase() const;
  void set_increase(bool value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlaySpeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool normalize_;
  bool increase_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlaySpeed* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestPlayFromPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestPlayFromPos) */ {
 public:
  MessageRequestPlayFromPos();
  virtual ~MessageRequestPlayFromPos();

  MessageRequestPlayFromPos(const MessageRequestPlayFromPos& from);

  inline MessageRequestPlayFromPos& operator=(const MessageRequestPlayFromPos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestPlayFromPos& default_instance();

  void Swap(MessageRequestPlayFromPos* other);

  // implements Message ----------------------------------------------

  inline MessageRequestPlayFromPos* New() const { return New(NULL); }

  MessageRequestPlayFromPos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestPlayFromPos& from);
  void MergeFrom(const MessageRequestPlayFromPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestPlayFromPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 positionMillisec = 1;
  void clear_positionmillisec();
  static const int kPositionMillisecFieldNumber = 1;
  ::google::protobuf::int64 positionmillisec() const;
  void set_positionmillisec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestPlayFromPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 positionmillisec_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestPlayFromPos* default_instance_;
};
// -------------------------------------------------------------------

class MessageRequestSetRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageRequestSetRange) */ {
 public:
  MessageRequestSetRange();
  virtual ~MessageRequestSetRange();

  MessageRequestSetRange(const MessageRequestSetRange& from);

  inline MessageRequestSetRange& operator=(const MessageRequestSetRange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRequestSetRange& default_instance();

  void Swap(MessageRequestSetRange* other);

  // implements Message ----------------------------------------------

  inline MessageRequestSetRange* New() const { return New(NULL); }

  MessageRequestSetRange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRequestSetRange& from);
  void MergeFrom(const MessageRequestSetRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageRequestSetRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 leftPlayingRangeMillisec = 1;
  void clear_leftplayingrangemillisec();
  static const int kLeftPlayingRangeMillisecFieldNumber = 1;
  ::google::protobuf::int64 leftplayingrangemillisec() const;
  void set_leftplayingrangemillisec(::google::protobuf::int64 value);

  // optional int64 rightPlayingRangeMillisec = 2;
  void clear_rightplayingrangemillisec();
  static const int kRightPlayingRangeMillisecFieldNumber = 2;
  ::google::protobuf::int64 rightplayingrangemillisec() const;
  void set_rightplayingrangemillisec(::google::protobuf::int64 value);

  // optional bool resetRange = 3;
  void clear_resetrange();
  static const int kResetRangeFieldNumber = 3;
  bool resetrange() const;
  void set_resetrange(bool value);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageRequestSetRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 leftplayingrangemillisec_;
  ::google::protobuf::int64 rightplayingrangemillisec_;
  bool resetrange_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageRequestSetRange* default_instance_;
};
// -------------------------------------------------------------------

class MessageResponsePlayerDestroy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageResponsePlayerDestroy) */ {
 public:
  MessageResponsePlayerDestroy();
  virtual ~MessageResponsePlayerDestroy();

  MessageResponsePlayerDestroy(const MessageResponsePlayerDestroy& from);

  inline MessageResponsePlayerDestroy& operator=(const MessageResponsePlayerDestroy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageResponsePlayerDestroy& default_instance();

  void Swap(MessageResponsePlayerDestroy* other);

  // implements Message ----------------------------------------------

  inline MessageResponsePlayerDestroy* New() const { return New(NULL); }

  MessageResponsePlayerDestroy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageResponsePlayerDestroy& from);
  void MergeFrom(const MessageResponsePlayerDestroy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponsePlayerDestroy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageResponsePlayerDestroy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageResponsePlayerDestroy* default_instance_;
};
// -------------------------------------------------------------------

class MessagePlayerController : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessagePlayerController) */ {
 public:
  MessagePlayerController();
  virtual ~MessagePlayerController();

  MessagePlayerController(const MessagePlayerController& from);

  inline MessagePlayerController& operator=(const MessagePlayerController& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessagePlayerController& default_instance();

  void Swap(MessagePlayerController* other);

  // implements Message ----------------------------------------------

  inline MessagePlayerController* New() const { return New(NULL); }

  MessagePlayerController* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessagePlayerController& from);
  void MergeFrom(const MessagePlayerController& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessagePlayerController* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol_player_agent_to_controller.MessageHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::protocol_player_agent_to_controller::MessageHeader& header() const;
  ::protocol_player_agent_to_controller::MessageHeader* mutable_header();
  ::protocol_player_agent_to_controller::MessageHeader* release_header();
  void set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header);

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
  bool has_msg_play_start() const;
  void clear_msg_play_start();
  static const int kMsgPlayStartFieldNumber = 2;
  const ::protocol_player_agent_to_controller::MessageResponsePlayStart& msg_play_start() const;
  ::protocol_player_agent_to_controller::MessageResponsePlayStart* mutable_msg_play_start();
  ::protocol_player_agent_to_controller::MessageResponsePlayStart* release_msg_play_start();
  void set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageResponsePlayStart* msg_play_start);

  // optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
  bool has_msg_play_stop() const;
  void clear_msg_play_stop();
  static const int kMsgPlayStopFieldNumber = 3;
  const ::protocol_player_agent_to_controller::MessageResponsePlayStop& msg_play_stop() const;
  ::protocol_player_agent_to_controller::MessageResponsePlayStop* mutable_msg_play_stop();
  ::protocol_player_agent_to_controller::MessageResponsePlayStop* release_msg_play_stop();
  void set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageResponsePlayStop* msg_play_stop);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessagePlayerController)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::protocol_player_agent_to_controller::MessageHeader* header_;
  ::protocol_player_agent_to_controller::MessageResponsePlayStart* msg_play_start_;
  ::protocol_player_agent_to_controller::MessageResponsePlayStop* msg_play_stop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessagePlayerController* default_instance_;
};
// -------------------------------------------------------------------

class MessageResponsePlayStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageResponsePlayStart) */ {
 public:
  MessageResponsePlayStart();
  virtual ~MessageResponsePlayStart();

  MessageResponsePlayStart(const MessageResponsePlayStart& from);

  inline MessageResponsePlayStart& operator=(const MessageResponsePlayStart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageResponsePlayStart& default_instance();

  void Swap(MessageResponsePlayStart* other);

  // implements Message ----------------------------------------------

  inline MessageResponsePlayStart* New() const { return New(NULL); }

  MessageResponsePlayStart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageResponsePlayStart& from);
  void MergeFrom(const MessageResponsePlayStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponsePlayStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageResponsePlayStart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageResponsePlayStart* default_instance_;
};
// -------------------------------------------------------------------

class MessageResponsePlayStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.MessageResponsePlayStop) */ {
 public:
  MessageResponsePlayStop();
  virtual ~MessageResponsePlayStop();

  MessageResponsePlayStop(const MessageResponsePlayStop& from);

  inline MessageResponsePlayStop& operator=(const MessageResponsePlayStop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageResponsePlayStop& default_instance();

  void Swap(MessageResponsePlayStop* other);

  // implements Message ----------------------------------------------

  inline MessageResponsePlayStop* New() const { return New(NULL); }

  MessageResponsePlayStop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageResponsePlayStop& from);
  void MergeFrom(const MessageResponsePlayStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponsePlayStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.MessageResponsePlayStop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static MessageResponsePlayStop* default_instance_;
};
// -------------------------------------------------------------------

class ProtobufPlayerAgentToController : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol_player_agent_to_controller.ProtobufPlayerAgentToController) */ {
 public:
  ProtobufPlayerAgentToController();
  virtual ~ProtobufPlayerAgentToController();

  ProtobufPlayerAgentToController(const ProtobufPlayerAgentToController& from);

  inline ProtobufPlayerAgentToController& operator=(const ProtobufPlayerAgentToController& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtobufPlayerAgentToController& default_instance();

  void Swap(ProtobufPlayerAgentToController* other);

  // implements Message ----------------------------------------------

  inline ProtobufPlayerAgentToController* New() const { return New(NULL); }

  ProtobufPlayerAgentToController* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtobufPlayerAgentToController& from);
  void MergeFrom(const ProtobufPlayerAgentToController& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtobufPlayerAgentToController* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol_player_agent_to_controller.EWho sender = 1;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  ::protocol_player_agent_to_controller::EWho sender() const;
  void set_sender(::protocol_player_agent_to_controller::EWho value);

  // optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
  bool has_msg_player_agent() const;
  void clear_msg_player_agent();
  static const int kMsgPlayerAgentFieldNumber = 2;
  const ::protocol_player_agent_to_controller::MessagePlayerAgent& msg_player_agent() const;
  ::protocol_player_agent_to_controller::MessagePlayerAgent* mutable_msg_player_agent();
  ::protocol_player_agent_to_controller::MessagePlayerAgent* release_msg_player_agent();
  void set_allocated_msg_player_agent(::protocol_player_agent_to_controller::MessagePlayerAgent* msg_player_agent);

  // optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
  bool has_msg_player_controller() const;
  void clear_msg_player_controller();
  static const int kMsgPlayerControllerFieldNumber = 3;
  const ::protocol_player_agent_to_controller::MessagePlayerController& msg_player_controller() const;
  ::protocol_player_agent_to_controller::MessagePlayerController* mutable_msg_player_controller();
  ::protocol_player_agent_to_controller::MessagePlayerController* release_msg_player_controller();
  void set_allocated_msg_player_controller(::protocol_player_agent_to_controller::MessagePlayerController* msg_player_controller);

  // @@protoc_insertion_point(class_scope:protocol_player_agent_to_controller.ProtobufPlayerAgentToController)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::protocol_player_agent_to_controller::MessagePlayerAgent* msg_player_agent_;
  ::protocol_player_agent_to_controller::MessagePlayerController* msg_player_controller_;
  int sender_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_AssignDesc_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();
  friend void protobuf_ShutdownFile_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto();

  void InitAsDefaultInstance();
  static ProtobufPlayerAgentToController* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageHeader

// optional string module_name = 1;
inline void MessageHeader::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageHeader::module_name() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageHeader.module_name)
  return module_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHeader::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageHeader.module_name)
}
inline void MessageHeader::set_module_name(const char* value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_player_agent_to_controller.MessageHeader.module_name)
}
inline void MessageHeader::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_player_agent_to_controller.MessageHeader.module_name)
}
inline ::std::string* MessageHeader::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessageHeader.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageHeader::release_module_name() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessageHeader.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHeader::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessageHeader.module_name)
}

// optional string last_error = 2;
inline void MessageHeader::clear_last_error() {
  last_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageHeader::last_error() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageHeader.last_error)
  return last_error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHeader::set_last_error(const ::std::string& value) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageHeader.last_error)
}
inline void MessageHeader::set_last_error(const char* value) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol_player_agent_to_controller.MessageHeader.last_error)
}
inline void MessageHeader::set_last_error(const char* value, size_t size) {
  
  last_error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol_player_agent_to_controller.MessageHeader.last_error)
}
inline ::std::string* MessageHeader::mutable_last_error() {
  
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessageHeader.last_error)
  return last_error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageHeader::release_last_error() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessageHeader.last_error)
  
  return last_error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHeader::set_allocated_last_error(::std::string* last_error) {
  if (last_error != NULL) {
    
  } else {
    
  }
  last_error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_error);
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessageHeader.last_error)
}

// -------------------------------------------------------------------

// MessagePlayerAgent

// optional .protocol_player_agent_to_controller.MessageHeader header = 1;
inline bool MessagePlayerAgent::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MessagePlayerAgent::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageHeader& MessagePlayerAgent::header() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::protocol_player_agent_to_controller::MessageHeader* MessagePlayerAgent::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol_player_agent_to_controller::MessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  return header_;
}
inline ::protocol_player_agent_to_controller::MessageHeader* MessagePlayerAgent::release_header() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.header)
  
  ::protocol_player_agent_to_controller::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.header)
}

// optional .protocol_player_agent_to_controller.EPlayerAgentCommandType cmd_type = 2;
inline void MessagePlayerAgent::clear_cmd_type() {
  cmd_type_ = 0;
}
inline ::protocol_player_agent_to_controller::EPlayerAgentCommandType MessagePlayerAgent::cmd_type() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.cmd_type)
  return static_cast< ::protocol_player_agent_to_controller::EPlayerAgentCommandType >(cmd_type_);
}
inline void MessagePlayerAgent::set_cmd_type(::protocol_player_agent_to_controller::EPlayerAgentCommandType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessagePlayerAgent.cmd_type)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStart msg_play_start = 3;
inline bool MessagePlayerAgent::has_msg_play_start() const {
  return !_is_default_instance_ && msg_play_start_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_start() {
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayStart& MessagePlayerAgent::msg_play_start() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  return msg_play_start_ != NULL ? *msg_play_start_ : *default_instance_->msg_play_start_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStart* MessagePlayerAgent::mutable_msg_play_start() {
  
  if (msg_play_start_ == NULL) {
    msg_play_start_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStart;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  return msg_play_start_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStart* MessagePlayerAgent::release_msg_play_start() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStart* temp = msg_play_start_;
  msg_play_start_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageRequestPlayStart* msg_play_start) {
  delete msg_play_start_;
  msg_play_start_ = msg_play_start;
  if (msg_play_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_start)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayPause msg_play_pause = 4;
inline bool MessagePlayerAgent::has_msg_play_pause() const {
  return !_is_default_instance_ && msg_play_pause_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_pause() {
  if (GetArenaNoVirtual() == NULL && msg_play_pause_ != NULL) delete msg_play_pause_;
  msg_play_pause_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayPause& MessagePlayerAgent::msg_play_pause() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  return msg_play_pause_ != NULL ? *msg_play_pause_ : *default_instance_->msg_play_pause_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayPause* MessagePlayerAgent::mutable_msg_play_pause() {
  
  if (msg_play_pause_ == NULL) {
    msg_play_pause_ = new ::protocol_player_agent_to_controller::MessageRequestPlayPause;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  return msg_play_pause_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayPause* MessagePlayerAgent::release_msg_play_pause() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayPause* temp = msg_play_pause_;
  msg_play_pause_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_pause(::protocol_player_agent_to_controller::MessageRequestPlayPause* msg_play_pause) {
  delete msg_play_pause_;
  msg_play_pause_ = msg_play_pause;
  if (msg_play_pause) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_pause)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStop msg_play_stop = 5;
inline bool MessagePlayerAgent::has_msg_play_stop() const {
  return !_is_default_instance_ && msg_play_stop_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_stop() {
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayStop& MessagePlayerAgent::msg_play_stop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  return msg_play_stop_ != NULL ? *msg_play_stop_ : *default_instance_->msg_play_stop_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStop* MessagePlayerAgent::mutable_msg_play_stop() {
  
  if (msg_play_stop_ == NULL) {
    msg_play_stop_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  return msg_play_stop_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStop* MessagePlayerAgent::release_msg_play_stop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStop* temp = msg_play_stop_;
  msg_play_stop_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageRequestPlayStop* msg_play_stop) {
  delete msg_play_stop_;
  msg_play_stop_ = msg_play_stop;
  if (msg_play_stop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_stop)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayStep msg_play_step = 6;
inline bool MessagePlayerAgent::has_msg_play_step() const {
  return !_is_default_instance_ && msg_play_step_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_step() {
  if (GetArenaNoVirtual() == NULL && msg_play_step_ != NULL) delete msg_play_step_;
  msg_play_step_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayStep& MessagePlayerAgent::msg_play_step() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  return msg_play_step_ != NULL ? *msg_play_step_ : *default_instance_->msg_play_step_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStep* MessagePlayerAgent::mutable_msg_play_step() {
  
  if (msg_play_step_ == NULL) {
    msg_play_step_ = new ::protocol_player_agent_to_controller::MessageRequestPlayStep;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  return msg_play_step_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayStep* MessagePlayerAgent::release_msg_play_step() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayStep* temp = msg_play_step_;
  msg_play_step_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_step(::protocol_player_agent_to_controller::MessageRequestPlayStep* msg_play_step) {
  delete msg_play_step_;
  msg_play_step_ = msg_play_step;
  if (msg_play_step) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_step)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayLoop msg_play_loop = 7;
inline bool MessagePlayerAgent::has_msg_play_loop() const {
  return !_is_default_instance_ && msg_play_loop_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_loop() {
  if (GetArenaNoVirtual() == NULL && msg_play_loop_ != NULL) delete msg_play_loop_;
  msg_play_loop_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayLoop& MessagePlayerAgent::msg_play_loop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  return msg_play_loop_ != NULL ? *msg_play_loop_ : *default_instance_->msg_play_loop_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayLoop* MessagePlayerAgent::mutable_msg_play_loop() {
  
  if (msg_play_loop_ == NULL) {
    msg_play_loop_ = new ::protocol_player_agent_to_controller::MessageRequestPlayLoop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  return msg_play_loop_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayLoop* MessagePlayerAgent::release_msg_play_loop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayLoop* temp = msg_play_loop_;
  msg_play_loop_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_loop(::protocol_player_agent_to_controller::MessageRequestPlayLoop* msg_play_loop) {
  delete msg_play_loop_;
  msg_play_loop_ = msg_play_loop;
  if (msg_play_loop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_loop)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayReverse msg_play_reverse = 8;
inline bool MessagePlayerAgent::has_msg_play_reverse() const {
  return !_is_default_instance_ && msg_play_reverse_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_reverse() {
  if (GetArenaNoVirtual() == NULL && msg_play_reverse_ != NULL) delete msg_play_reverse_;
  msg_play_reverse_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayReverse& MessagePlayerAgent::msg_play_reverse() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  return msg_play_reverse_ != NULL ? *msg_play_reverse_ : *default_instance_->msg_play_reverse_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayReverse* MessagePlayerAgent::mutable_msg_play_reverse() {
  
  if (msg_play_reverse_ == NULL) {
    msg_play_reverse_ = new ::protocol_player_agent_to_controller::MessageRequestPlayReverse;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  return msg_play_reverse_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayReverse* MessagePlayerAgent::release_msg_play_reverse() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayReverse* temp = msg_play_reverse_;
  msg_play_reverse_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_reverse(::protocol_player_agent_to_controller::MessageRequestPlayReverse* msg_play_reverse) {
  delete msg_play_reverse_;
  msg_play_reverse_ = msg_play_reverse;
  if (msg_play_reverse) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_reverse)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlaySpeed msg_play_speed = 9;
inline bool MessagePlayerAgent::has_msg_play_speed() const {
  return !_is_default_instance_ && msg_play_speed_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_speed() {
  if (GetArenaNoVirtual() == NULL && msg_play_speed_ != NULL) delete msg_play_speed_;
  msg_play_speed_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlaySpeed& MessagePlayerAgent::msg_play_speed() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  return msg_play_speed_ != NULL ? *msg_play_speed_ : *default_instance_->msg_play_speed_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* MessagePlayerAgent::mutable_msg_play_speed() {
  
  if (msg_play_speed_ == NULL) {
    msg_play_speed_ = new ::protocol_player_agent_to_controller::MessageRequestPlaySpeed;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  return msg_play_speed_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* MessagePlayerAgent::release_msg_play_speed() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
  
  ::protocol_player_agent_to_controller::MessageRequestPlaySpeed* temp = msg_play_speed_;
  msg_play_speed_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_speed(::protocol_player_agent_to_controller::MessageRequestPlaySpeed* msg_play_speed) {
  delete msg_play_speed_;
  msg_play_speed_ = msg_play_speed;
  if (msg_play_speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_speed)
}

// optional .protocol_player_agent_to_controller.MessageRequestPlayFromPos msg_play_from_pos = 10;
inline bool MessagePlayerAgent::has_msg_play_from_pos() const {
  return !_is_default_instance_ && msg_play_from_pos_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_play_from_pos() {
  if (GetArenaNoVirtual() == NULL && msg_play_from_pos_ != NULL) delete msg_play_from_pos_;
  msg_play_from_pos_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestPlayFromPos& MessagePlayerAgent::msg_play_from_pos() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  return msg_play_from_pos_ != NULL ? *msg_play_from_pos_ : *default_instance_->msg_play_from_pos_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* MessagePlayerAgent::mutable_msg_play_from_pos() {
  
  if (msg_play_from_pos_ == NULL) {
    msg_play_from_pos_ = new ::protocol_player_agent_to_controller::MessageRequestPlayFromPos;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  return msg_play_from_pos_;
}
inline ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* MessagePlayerAgent::release_msg_play_from_pos() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
  
  ::protocol_player_agent_to_controller::MessageRequestPlayFromPos* temp = msg_play_from_pos_;
  msg_play_from_pos_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_play_from_pos(::protocol_player_agent_to_controller::MessageRequestPlayFromPos* msg_play_from_pos) {
  delete msg_play_from_pos_;
  msg_play_from_pos_ = msg_play_from_pos;
  if (msg_play_from_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_play_from_pos)
}

// optional .protocol_player_agent_to_controller.MessageRequestSetRange msg_set_range = 11;
inline bool MessagePlayerAgent::has_msg_set_range() const {
  return !_is_default_instance_ && msg_set_range_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_set_range() {
  if (GetArenaNoVirtual() == NULL && msg_set_range_ != NULL) delete msg_set_range_;
  msg_set_range_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageRequestSetRange& MessagePlayerAgent::msg_set_range() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  return msg_set_range_ != NULL ? *msg_set_range_ : *default_instance_->msg_set_range_;
}
inline ::protocol_player_agent_to_controller::MessageRequestSetRange* MessagePlayerAgent::mutable_msg_set_range() {
  
  if (msg_set_range_ == NULL) {
    msg_set_range_ = new ::protocol_player_agent_to_controller::MessageRequestSetRange;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  return msg_set_range_;
}
inline ::protocol_player_agent_to_controller::MessageRequestSetRange* MessagePlayerAgent::release_msg_set_range() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
  
  ::protocol_player_agent_to_controller::MessageRequestSetRange* temp = msg_set_range_;
  msg_set_range_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_set_range(::protocol_player_agent_to_controller::MessageRequestSetRange* msg_set_range) {
  delete msg_set_range_;
  msg_set_range_ = msg_set_range;
  if (msg_set_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_set_range)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayerDestroy msg_player_destroy = 12;
inline bool MessagePlayerAgent::has_msg_player_destroy() const {
  return !_is_default_instance_ && msg_player_destroy_ != NULL;
}
inline void MessagePlayerAgent::clear_msg_player_destroy() {
  if (GetArenaNoVirtual() == NULL && msg_player_destroy_ != NULL) delete msg_player_destroy_;
  msg_player_destroy_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy& MessagePlayerAgent::msg_player_destroy() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  return msg_player_destroy_ != NULL ? *msg_player_destroy_ : *default_instance_->msg_player_destroy_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* MessagePlayerAgent::mutable_msg_player_destroy() {
  
  if (msg_player_destroy_ == NULL) {
    msg_player_destroy_ = new ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  return msg_player_destroy_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* MessagePlayerAgent::release_msg_player_destroy() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* temp = msg_player_destroy_;
  msg_player_destroy_ = NULL;
  return temp;
}
inline void MessagePlayerAgent::set_allocated_msg_player_destroy(::protocol_player_agent_to_controller::MessageResponsePlayerDestroy* msg_player_destroy) {
  delete msg_player_destroy_;
  msg_player_destroy_ = msg_player_destroy;
  if (msg_player_destroy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerAgent.msg_player_destroy)
}

// -------------------------------------------------------------------

// MessageRequestPlayStart

// -------------------------------------------------------------------

// MessageRequestPlayPause

// -------------------------------------------------------------------

// MessageRequestPlayStop

// -------------------------------------------------------------------

// MessageRequestPlayStep

// optional bool forward = 1;
inline void MessageRequestPlayStep::clear_forward() {
  forward_ = false;
}
inline bool MessageRequestPlayStep::forward() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayStep.forward)
  return forward_;
}
inline void MessageRequestPlayStep::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayStep.forward)
}

// -------------------------------------------------------------------

// MessageRequestPlayLoop

// optional bool loop = 1;
inline void MessageRequestPlayLoop::clear_loop() {
  loop_ = false;
}
inline bool MessageRequestPlayLoop::loop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayLoop.loop)
  return loop_;
}
inline void MessageRequestPlayLoop::set_loop(bool value) {
  
  loop_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayLoop.loop)
}

// -------------------------------------------------------------------

// MessageRequestPlayReverse

// optional bool reverse = 1;
inline void MessageRequestPlayReverse::clear_reverse() {
  reverse_ = false;
}
inline bool MessageRequestPlayReverse::reverse() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayReverse.reverse)
  return reverse_;
}
inline void MessageRequestPlayReverse::set_reverse(bool value) {
  
  reverse_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayReverse.reverse)
}

// -------------------------------------------------------------------

// MessageRequestPlaySpeed

// optional bool normalize = 1;
inline void MessageRequestPlaySpeed::clear_normalize() {
  normalize_ = false;
}
inline bool MessageRequestPlaySpeed::normalize() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlaySpeed.normalize)
  return normalize_;
}
inline void MessageRequestPlaySpeed::set_normalize(bool value) {
  
  normalize_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlaySpeed.normalize)
}

// optional bool increase = 2;
inline void MessageRequestPlaySpeed::clear_increase() {
  increase_ = false;
}
inline bool MessageRequestPlaySpeed::increase() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlaySpeed.increase)
  return increase_;
}
inline void MessageRequestPlaySpeed::set_increase(bool value) {
  
  increase_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlaySpeed.increase)
}

// -------------------------------------------------------------------

// MessageRequestPlayFromPos

// optional int64 positionMillisec = 1;
inline void MessageRequestPlayFromPos::clear_positionmillisec() {
  positionmillisec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageRequestPlayFromPos::positionmillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestPlayFromPos.positionMillisec)
  return positionmillisec_;
}
inline void MessageRequestPlayFromPos::set_positionmillisec(::google::protobuf::int64 value) {
  
  positionmillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestPlayFromPos.positionMillisec)
}

// -------------------------------------------------------------------

// MessageRequestSetRange

// optional int64 leftPlayingRangeMillisec = 1;
inline void MessageRequestSetRange::clear_leftplayingrangemillisec() {
  leftplayingrangemillisec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageRequestSetRange::leftplayingrangemillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.leftPlayingRangeMillisec)
  return leftplayingrangemillisec_;
}
inline void MessageRequestSetRange::set_leftplayingrangemillisec(::google::protobuf::int64 value) {
  
  leftplayingrangemillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.leftPlayingRangeMillisec)
}

// optional int64 rightPlayingRangeMillisec = 2;
inline void MessageRequestSetRange::clear_rightplayingrangemillisec() {
  rightplayingrangemillisec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageRequestSetRange::rightplayingrangemillisec() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.rightPlayingRangeMillisec)
  return rightplayingrangemillisec_;
}
inline void MessageRequestSetRange::set_rightplayingrangemillisec(::google::protobuf::int64 value) {
  
  rightplayingrangemillisec_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.rightPlayingRangeMillisec)
}

// optional bool resetRange = 3;
inline void MessageRequestSetRange::clear_resetrange() {
  resetrange_ = false;
}
inline bool MessageRequestSetRange::resetrange() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessageRequestSetRange.resetRange)
  return resetrange_;
}
inline void MessageRequestSetRange::set_resetrange(bool value) {
  
  resetrange_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.MessageRequestSetRange.resetRange)
}

// -------------------------------------------------------------------

// MessageResponsePlayerDestroy

// -------------------------------------------------------------------

// MessagePlayerController

// optional .protocol_player_agent_to_controller.MessageHeader header = 1;
inline bool MessagePlayerController::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MessagePlayerController::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageHeader& MessagePlayerController::header() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::protocol_player_agent_to_controller::MessageHeader* MessagePlayerController::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol_player_agent_to_controller::MessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.header)
  return header_;
}
inline ::protocol_player_agent_to_controller::MessageHeader* MessagePlayerController::release_header() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.header)
  
  ::protocol_player_agent_to_controller::MessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MessagePlayerController::set_allocated_header(::protocol_player_agent_to_controller::MessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.header)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayStart msg_play_start = 2;
inline bool MessagePlayerController::has_msg_play_start() const {
  return !_is_default_instance_ && msg_play_start_ != NULL;
}
inline void MessagePlayerController::clear_msg_play_start() {
  if (GetArenaNoVirtual() == NULL && msg_play_start_ != NULL) delete msg_play_start_;
  msg_play_start_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageResponsePlayStart& MessagePlayerController::msg_play_start() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  return msg_play_start_ != NULL ? *msg_play_start_ : *default_instance_->msg_play_start_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayStart* MessagePlayerController::mutable_msg_play_start() {
  
  if (msg_play_start_ == NULL) {
    msg_play_start_ = new ::protocol_player_agent_to_controller::MessageResponsePlayStart;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  return msg_play_start_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayStart* MessagePlayerController::release_msg_play_start() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayStart* temp = msg_play_start_;
  msg_play_start_ = NULL;
  return temp;
}
inline void MessagePlayerController::set_allocated_msg_play_start(::protocol_player_agent_to_controller::MessageResponsePlayStart* msg_play_start) {
  delete msg_play_start_;
  msg_play_start_ = msg_play_start;
  if (msg_play_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.msg_play_start)
}

// optional .protocol_player_agent_to_controller.MessageResponsePlayStop msg_play_stop = 3;
inline bool MessagePlayerController::has_msg_play_stop() const {
  return !_is_default_instance_ && msg_play_stop_ != NULL;
}
inline void MessagePlayerController::clear_msg_play_stop() {
  if (GetArenaNoVirtual() == NULL && msg_play_stop_ != NULL) delete msg_play_stop_;
  msg_play_stop_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessageResponsePlayStop& MessagePlayerController::msg_play_stop() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  return msg_play_stop_ != NULL ? *msg_play_stop_ : *default_instance_->msg_play_stop_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayStop* MessagePlayerController::mutable_msg_play_stop() {
  
  if (msg_play_stop_ == NULL) {
    msg_play_stop_ = new ::protocol_player_agent_to_controller::MessageResponsePlayStop;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  return msg_play_stop_;
}
inline ::protocol_player_agent_to_controller::MessageResponsePlayStop* MessagePlayerController::release_msg_play_stop() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
  
  ::protocol_player_agent_to_controller::MessageResponsePlayStop* temp = msg_play_stop_;
  msg_play_stop_ = NULL;
  return temp;
}
inline void MessagePlayerController::set_allocated_msg_play_stop(::protocol_player_agent_to_controller::MessageResponsePlayStop* msg_play_stop) {
  delete msg_play_stop_;
  msg_play_stop_ = msg_play_stop;
  if (msg_play_stop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.MessagePlayerController.msg_play_stop)
}

// -------------------------------------------------------------------

// MessageResponsePlayStart

// -------------------------------------------------------------------

// MessageResponsePlayStop

// -------------------------------------------------------------------

// ProtobufPlayerAgentToController

// optional .protocol_player_agent_to_controller.EWho sender = 1;
inline void ProtobufPlayerAgentToController::clear_sender() {
  sender_ = 0;
}
inline ::protocol_player_agent_to_controller::EWho ProtobufPlayerAgentToController::sender() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.sender)
  return static_cast< ::protocol_player_agent_to_controller::EWho >(sender_);
}
inline void ProtobufPlayerAgentToController::set_sender(::protocol_player_agent_to_controller::EWho value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.sender)
}

// optional .protocol_player_agent_to_controller.MessagePlayerAgent msg_player_agent = 2;
inline bool ProtobufPlayerAgentToController::has_msg_player_agent() const {
  return !_is_default_instance_ && msg_player_agent_ != NULL;
}
inline void ProtobufPlayerAgentToController::clear_msg_player_agent() {
  if (GetArenaNoVirtual() == NULL && msg_player_agent_ != NULL) delete msg_player_agent_;
  msg_player_agent_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessagePlayerAgent& ProtobufPlayerAgentToController::msg_player_agent() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  return msg_player_agent_ != NULL ? *msg_player_agent_ : *default_instance_->msg_player_agent_;
}
inline ::protocol_player_agent_to_controller::MessagePlayerAgent* ProtobufPlayerAgentToController::mutable_msg_player_agent() {
  
  if (msg_player_agent_ == NULL) {
    msg_player_agent_ = new ::protocol_player_agent_to_controller::MessagePlayerAgent;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  return msg_player_agent_;
}
inline ::protocol_player_agent_to_controller::MessagePlayerAgent* ProtobufPlayerAgentToController::release_msg_player_agent() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
  
  ::protocol_player_agent_to_controller::MessagePlayerAgent* temp = msg_player_agent_;
  msg_player_agent_ = NULL;
  return temp;
}
inline void ProtobufPlayerAgentToController::set_allocated_msg_player_agent(::protocol_player_agent_to_controller::MessagePlayerAgent* msg_player_agent) {
  delete msg_player_agent_;
  msg_player_agent_ = msg_player_agent;
  if (msg_player_agent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_agent)
}

// optional .protocol_player_agent_to_controller.MessagePlayerController msg_player_controller = 3;
inline bool ProtobufPlayerAgentToController::has_msg_player_controller() const {
  return !_is_default_instance_ && msg_player_controller_ != NULL;
}
inline void ProtobufPlayerAgentToController::clear_msg_player_controller() {
  if (GetArenaNoVirtual() == NULL && msg_player_controller_ != NULL) delete msg_player_controller_;
  msg_player_controller_ = NULL;
}
inline const ::protocol_player_agent_to_controller::MessagePlayerController& ProtobufPlayerAgentToController::msg_player_controller() const {
  // @@protoc_insertion_point(field_get:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  return msg_player_controller_ != NULL ? *msg_player_controller_ : *default_instance_->msg_player_controller_;
}
inline ::protocol_player_agent_to_controller::MessagePlayerController* ProtobufPlayerAgentToController::mutable_msg_player_controller() {
  
  if (msg_player_controller_ == NULL) {
    msg_player_controller_ = new ::protocol_player_agent_to_controller::MessagePlayerController;
  }
  // @@protoc_insertion_point(field_mutable:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  return msg_player_controller_;
}
inline ::protocol_player_agent_to_controller::MessagePlayerController* ProtobufPlayerAgentToController::release_msg_player_controller() {
  // @@protoc_insertion_point(field_release:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
  
  ::protocol_player_agent_to_controller::MessagePlayerController* temp = msg_player_controller_;
  msg_player_controller_ = NULL;
  return temp;
}
inline void ProtobufPlayerAgentToController::set_allocated_msg_player_controller(::protocol_player_agent_to_controller::MessagePlayerController* msg_player_controller) {
  delete msg_player_controller_;
  msg_player_controller_ = msg_player_controller;
  if (msg_player_controller) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol_player_agent_to_controller.ProtobufPlayerAgentToController.msg_player_controller)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol_player_agent_to_controller

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol_player_agent_to_controller::EPlayerAgentCommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol_player_agent_to_controller::EPlayerAgentCommandType>() {
  return ::protocol_player_agent_to_controller::EPlayerAgentCommandType_descriptor();
}
template <> struct is_proto_enum< ::protocol_player_agent_to_controller::EPlayerControllerCommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol_player_agent_to_controller::EPlayerControllerCommandType>() {
  return ::protocol_player_agent_to_controller::EPlayerControllerCommandType_descriptor();
}
template <> struct is_proto_enum< ::protocol_player_agent_to_controller::EWho> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol_player_agent_to_controller::EWho>() {
  return ::protocol_player_agent_to_controller::EWho_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_5fplayer_5fagent_5fto_5fcontroller_2eproto__INCLUDED
